;/////////////////////////////////////////////////////////////////////////////////
;// Code Generator: BoostC Compiler - http://www.sourceboost.com
;// Version       : 6.95
;// License Type  : Full License
;// Limitations   : PIC12,PIC16 max code size:Unlimited, max RAM banks:Unlimited, Non commercial use only
;/////////////////////////////////////////////////////////////////////////////////

//************************************************************************************
//**  
//**  File name:     C:\projects\magicwand\xc8\magicwand.c
//**  Generated by:  Flowcode v4.2.3.58
//**  Date:          Monday, May 04, 2015 07:43:07
//**  Licence:       Professional
//**  Registered to: 20ACM8
//**  
//**  
//**  http://www.matrixmultimedia.com
//************************************************************************************


#define MX_PIC

//Defines for microcontroller
#define P16F72
#define MX_SPI
#define MX_SPI_C
#define MX_SPI_SDI 4
#define MX_SPI_SDO 5
#define MX_SPI_SCK 3
#define MX_I2C
#define MX_MI2C
#define MX_I2C_C
#define MX_I2C_SDA 4
#define MX_I2C_SCL 3
#define MX_PWM
#define MX_PWM_CNT 1
#define MX_PWM_TRIS1 trisc
#define MX_PWM_1 2

//Functions
#define MX_CLK_SPEED 19660800
#ifdef _BOOSTC
#include <system.h>
#endif
#ifdef HI_TECH_C
#include <pic.h>
#endif

//Configuration data
#ifdef _BOOSTC
#pragma DATA 0x2007, 0x3faa
#endif
#ifdef HI_TECH_C
__CONFIG(0x3faa);
#endif

//Internal functions
#include "C:\Program Files (x86)\Matrix Multimedia\Flowcode V4\FCD\internals.h"

//Macro function declarations


//Variable declarations



//Macro implementations

void main()

{
	
	//Initialisation
	adcon1 = 0x07;
0047  3007  	MOVLW 0x07
0048  1683  	BSF STATUS, RP0
0049  1303  	BCF STATUS, RP1
004A  009F  	MOVWF gbl_adcon1



	//Interrupt initialisation code
	option_reg = 0xC0;
004B  30C0  	MOVLW 0xC0
004C  0081  	MOVWF gbl_option_reg



	//Loop
	//Loop: While 1
	while (1)
004D        label4
005B  284D  	GOTO	label4

	{
		//Output
		//Output: 1 -> PORT C
		trisc = 0x00;
004D  1683  	BSF STATUS, RP0
004E  0187  	CLRF gbl_trisc

		portc = 1;
004F  3001  	MOVLW 0x01
0050  1283  	BCF STATUS, RP0
0051  0087  	MOVWF gbl_portc



		//Delay
		//Delay: 1 s
		delay_s(1);
0052  00C2  	MOVWF delay_s_00000_arg_del
0053  2038  	CALL delay_s_00000



		//Output
		//Output: 0 -> PORT C
		trisc = 0x00;
0054  1683  	BSF STATUS, RP0
0055  0187  	CLRF gbl_trisc

		portc = 0;
0056  1283  	BCF STATUS, RP0
0057  0187  	CLRF gbl_portc



		//Delay
		//Delay: 1 s
		delay_s(1);
0058  3001  	MOVLW 0x01
0059  00C2  	MOVWF delay_s_00000_arg_del
005A  2038  	CALL delay_s_00000



	}


	mainendloop: goto mainendloop;
}


void MX_INTERRUPT_MACRO(void)

{
}
0084  1283  	BCF STATUS, RP0
0085  1303  	BCF STATUS, RP1
0086  0E36  	SWAPF Int1BContext+D'2', W
0087  0084  	MOVWF FSR
0088  0E35  	SWAPF Int1BContext+D'1', W
0089  008A  	MOVWF PCLATH
008A  0E34  	SWAPF Int1BContext, W
008B  0083  	MOVWF STATUS
008C  0EFF  	SWAPF Int1Context, F
008D  0E7F  	SWAPF Int1Context, W
008E  0009  	RETFIE





////////////////////////////////////////
// Code with no source :-)
////////////////////////////////////////
0000  285C  	GOTO	_startup

0004  00FF  	MOVWF Int1Context
0005  0E03  	SWAPF STATUS, W
0006  1283  	BCF STATUS, RP0
0007  1303  	BCF STATUS, RP1
0008  00B4  	MOVWF Int1BContext
0009  0E0A  	SWAPF PCLATH, W
000A  00B5  	MOVWF Int1BContext+D'1'
000B  0E04  	SWAPF FSR, W
000C  00B6  	MOVWF Int1BContext+D'2'
000D  118A  	BCF PCLATH,3
000E  120A  	BCF PCLATH,4
000F  2884  	GOTO	interrupt
0010        delay_ms_00000
0010        ; { delay_ms ; function begin
0010  08C3  	MOVF delay_ms_00000_arg_del, F
0011  1D03  	BTFSS STATUS,Z
0012  2814  	GOTO	label1
0013  0008  	RETURN
0014        label1
0014  30F5  	MOVLW 0xF5
0015        label2
0015  0000  	NOP
0016  0000  	NOP
0017  0000  	NOP
0018  0000  	NOP
0019  0000  	NOP
001A  0000  	NOP
001B  0000  	NOP
001C  0000  	NOP
001D  0000  	NOP
001E  0000  	NOP
001F  0000  	NOP
0020  0000  	NOP
0021  0000  	NOP
0022  0000  	NOP
0023  0000  	NOP
0024  0000  	NOP
0025  3EFF  	ADDLW 0xFF
0026  1D03  	BTFSS STATUS,Z
0027  2815  	GOTO	label2
0028  0000  	NOP
0029  0000  	NOP
002A  0000  	NOP
002B  0000  	NOP
002C  0000  	NOP
002D  0000  	NOP
002E  0000  	NOP
002F  0000  	NOP
0030  0000  	NOP
0031  0000  	NOP
0032  0000  	NOP
0033  0000  	NOP
0034  0000  	NOP
0035  0BC3  	DECFSZ delay_ms_00000_arg_del, F
0036  2814  	GOTO	label1
0037  0008  	RETURN
0038        ; } delay_ms function end

0038        delay_s_00000
0038        ; { delay_s ; function begin
0038        label3
0038  30FA  	MOVLW 0xFA
0039  00C3  	MOVWF delay_ms_00000_arg_del
003A  2010  	CALL delay_ms_00000
003B  30FA  	MOVLW 0xFA
003C  00C3  	MOVWF delay_ms_00000_arg_del
003D  2010  	CALL delay_ms_00000
003E  30FA  	MOVLW 0xFA
003F  00C3  	MOVWF delay_ms_00000_arg_del
0040  2010  	CALL delay_ms_00000
0041  30FA  	MOVLW 0xFA
0042  00C3  	MOVWF delay_ms_00000_arg_del
0043  2010  	CALL delay_ms_00000
0044  0BC2  	DECFSZ delay_s_00000_arg_del, F
0045  2838  	GOTO	label3
0046  0008  	RETURN
0047        ; } delay_s function end


005C        _startup
005C  30D5  	MOVLW 0xD5
005D  1283  	BCF STATUS, RP0
005E  1303  	BCF STATUS, RP1
005F  00A0  	MOVWF gbl_16_LSR
0060  30C4  	MOVLW 0xC4
0061  00A1  	MOVWF gbl_16_LSR+D'1'
0062  30BB  	MOVLW 0xBB
0063  00A2  	MOVWF gbl_16_LSR+D'2'
0064  30DC  	MOVLW 0xDC
0065  00A3  	MOVWF gbl_16_LSR+D'3'
0066  01A4  	CLRF gbl_17_gbl_aSig
0067  01A5  	CLRF gbl_17_gbl_aSig+D'1'
0068  01A6  	CLRF gbl_17_gbl_aSig+D'2'
0069  01A7  	CLRF gbl_17_gbl_aSig+D'3'
006A  01A8  	CLRF gbl_17_gbl_bSig
006B  01A9  	CLRF gbl_17_gbl_bSig+D'1'
006C  01AA  	CLRF gbl_17_gbl_bSig+D'2'
006D  01AB  	CLRF gbl_17_gbl_bSig+D'3'
006E  01AC  	CLRF gbl_17_gbl_zSig
006F  01AD  	CLRF gbl_17_gbl_zSig+D'1'
0070  01AE  	CLRF gbl_17_gbl_zSig+D'2'
0071  01AF  	CLRF gbl_17_gbl_zSig+D'3'
0072  01BC  	CLRF gbl_17_gbl_aExp
0073  01BD  	CLRF gbl_17_gbl_bExp
0074  01B7  	CLRF gbl_17_gbl_zExp
0075  01B8  	CLRF gbl_17_gbl_zExp+D'1'
0076  01BE  	CLRF gbl_17_gbl_aSign
0077  01BF  	CLRF gbl_17_gbl_bSign
0078  01C0  	CLRF gbl_17_gbl_zSign
0079  01C1  	CLRF gbl_17_gbl_zSigZero
007A  01B0  	CLRF gbl_17_gbl_ret
007B  01B1  	CLRF gbl_17_gbl_ret+D'1'
007C  01B2  	CLRF gbl_17_gbl_ret+D'2'
007D  01B3  	CLRF gbl_17_gbl_ret+D'3'
007E  01BA  	CLRF gbl_float_rounding_mode
007F  01BB  	CLRF gbl_float_exception_flags
0080  01B9  	CLRF gbl_float_detect_tininess
0081  118A  	BCF PCLATH,3
0082  120A  	BCF PCLATH,4
0083  2847  	GOTO	main

2007  3FAA  	DW 0x3FAA
