

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat May 23 21:49:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0015                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0017                     	;# 
    38  0018                     	;# 
    39  0019                     	;# 
    40  001A                     	;# 
    41  001F                     	;# 
    42  0081                     	;# 
    43  0085                     	;# 
    44  0086                     	;# 
    45  008C                     	;# 
    46  008E                     	;# 
    47  0092                     	;# 
    48  0098                     	;# 
    49  0099                     	;# 
    50  009A                     	;# 
    51  009B                     	;# 
    52  009C                     	;# 
    53  009D                     	;# 
    54  009F                     	;# 
    55                           
    56                           	psect	stringtext
    57  0600                     __pstringtext:	
    58  0600                     stringtab:	
    59  0600                     __stringtab:	
    60                           
    61                           ;	String table - string pointers are 2 bytes each
    62  0600  1BFF               	btfsc	btemp+1,7
    63  0601  2E0A               	ljmp	stringcode
    64  0602  1383               	bcf	3,7
    65  0603  187F               	btfsc	btemp+1,0
    66  0604  1783               	bsf	3,7
    67  0605  0800               	movf	0,w
    68  0606  0A84               	incf	4,f
    69  0607  1903               	skipnz
    70  0608  0AFF               	incf	btemp+1,f
    71  0609  0008               	return
    72  060A                     stringcode:	
    73  060A  087F               	movf	btemp+1,w
    74  060B  397F               	andlw	127
    75  060C  008A               	movwf	10
    76  060D  0804               	movf	4,w
    77  060E  0A84               	incf	4,f
    78  060F  1903               	skipnz
    79  0610  0AFF               	incf	btemp+1,f
    80  0611  0082               	movwf	2
    81  0612                     __stringbase:	
    82  0612                     __end_of__stringtab:	
    83  0612                     _matrixFont:	
    84  0612  3400               	retlw	0
    85  0613  3400               	retlw	0
    86  0614  3400               	retlw	0
    87  0615  3400               	retlw	0
    88  0616  3400               	retlw	0
    89  0617  3400               	retlw	0
    90  0618  3400               	retlw	0
    91  0619  3400               	retlw	0
    92  061A  3400               	retlw	0
    93  061B  34FD               	retlw	253
    94  061C  3400               	retlw	0
    95  061D  3400               	retlw	0
    96  061E  3400               	retlw	0
    97  061F  34FF               	retlw	255
    98  0620  34FF               	retlw	255
    99  0621  34FF               	retlw	255
   100  0622  34FF               	retlw	255
   101  0623  34FF               	retlw	255
   102  0624  3400               	retlw	0
   103  0625  3424               	retlw	36
   104  0626  34FF               	retlw	255
   105  0627  3424               	retlw	36
   106  0628  34FF               	retlw	255
   107  0629  3424               	retlw	36
   108  062A  3400               	retlw	0
   109  062B  3412               	retlw	18
   110  062C  342A               	retlw	42
   111  062D  347F               	retlw	127
   112  062E  342A               	retlw	42
   113  062F  3424               	retlw	36
   114  0630  3400               	retlw	0
   115  0631  34FF               	retlw	255
   116  0632  34FF               	retlw	255
   117  0633  34FF               	retlw	255
   118  0634  34FF               	retlw	255
   119  0635  34FF               	retlw	255
   120  0636  3400               	retlw	0
   121  0637  3476               	retlw	118
   122  0638  3489               	retlw	137
   123  0639  3495               	retlw	149
   124  063A  3462               	retlw	98
   125  063B  3405               	retlw	5
   126  063C  3400               	retlw	0
   127  063D  34FF               	retlw	255
   128  063E  34FF               	retlw	255
   129  063F  34FF               	retlw	255
   130  0640  34FF               	retlw	255
   131  0641  34FF               	retlw	255
   132  0642  3400               	retlw	0
   133  0643  3400               	retlw	0
   134  0644  343C               	retlw	60
   135  0645  3442               	retlw	66
   136  0646  3481               	retlw	129
   137  0647  3400               	retlw	0
   138  0648  3400               	retlw	0
   139  0649  3400               	retlw	0
   140  064A  3481               	retlw	129
   141  064B  3442               	retlw	66
   142  064C  343C               	retlw	60
   143  064D  3400               	retlw	0
   144  064E  3400               	retlw	0
   145  064F  34FF               	retlw	255
   146  0650  34FF               	retlw	255
   147  0651  34FF               	retlw	255
   148  0652  34FF               	retlw	255
   149  0653  34FF               	retlw	255
   150  0654  3400               	retlw	0
   151  0655  3408               	retlw	8
   152  0656  3408               	retlw	8
   153  0657  343E               	retlw	62
   154  0658  3408               	retlw	8
   155  0659  3408               	retlw	8
   156  065A  3400               	retlw	0
   157  065B  34FF               	retlw	255
   158  065C  34FF               	retlw	255
   159  065D  34FF               	retlw	255
   160  065E  34FF               	retlw	255
   161  065F  34FF               	retlw	255
   162  0660  3400               	retlw	0
   163  0661  3408               	retlw	8
   164  0662  3408               	retlw	8
   165  0663  3408               	retlw	8
   166  0664  3408               	retlw	8
   167  0665  3408               	retlw	8
   168  0666  3400               	retlw	0
   169  0667  34FF               	retlw	255
   170  0668  34FF               	retlw	255
   171  0669  34FF               	retlw	255
   172  066A  34FF               	retlw	255
   173  066B  34FF               	retlw	255
   174  066C  3400               	retlw	0
   175  066D  34FF               	retlw	255
   176  066E  34FF               	retlw	255
   177  066F  34FF               	retlw	255
   178  0670  34FF               	retlw	255
   179  0671  34FF               	retlw	255
   180  0672  3400               	retlw	0
   181  0673  347E               	retlw	126
   182  0674  3489               	retlw	137
   183  0675  3491               	retlw	145
   184  0676  34A1               	retlw	161
   185  0677  347E               	retlw	126
   186  0678  3400               	retlw	0
   187  0679  3400               	retlw	0
   188  067A  3441               	retlw	65
   189  067B  34FF               	retlw	255
   190  067C  3401               	retlw	1
   191  067D  3400               	retlw	0
   192  067E  3400               	retlw	0
   193  067F  3443               	retlw	67
   194  0680  3485               	retlw	133
   195  0681  3489               	retlw	137
   196  0682  3491               	retlw	145
   197  0683  3461               	retlw	97
   198  0684  3400               	retlw	0
   199  0685  3442               	retlw	66
   200  0686  3481               	retlw	129
   201  0687  3491               	retlw	145
   202  0688  3491               	retlw	145
   203  0689  346E               	retlw	110
   204  068A  3400               	retlw	0
   205  068B  3418               	retlw	24
   206  068C  3428               	retlw	40
   207  068D  3448               	retlw	72
   208  068E  34FF               	retlw	255
   209  068F  3408               	retlw	8
   210  0690  3400               	retlw	0
   211  0691  34F2               	retlw	242
   212  0692  3491               	retlw	145
   213  0693  3491               	retlw	145
   214  0694  3491               	retlw	145
   215  0695  348E               	retlw	142
   216  0696  3400               	retlw	0
   217  0697  341E               	retlw	30
   218  0698  3429               	retlw	41
   219  0699  3449               	retlw	73
   220  069A  3489               	retlw	137
   221  069B  3486               	retlw	134
   222  069C  3400               	retlw	0
   223  069D  3480               	retlw	128
   224  069E  348F               	retlw	143
   225  069F  3490               	retlw	144
   226  06A0  34A0               	retlw	160
   227  06A1  34C0               	retlw	192
   228  06A2  3400               	retlw	0
   229  06A3  346E               	retlw	110
   230  06A4  3491               	retlw	145
   231  06A5  3491               	retlw	145
   232  06A6  3491               	retlw	145
   233  06A7  346E               	retlw	110
   234  06A8  3400               	retlw	0
   235  06A9  3470               	retlw	112
   236  06AA  3489               	retlw	137
   237  06AB  3489               	retlw	137
   238  06AC  348A               	retlw	138
   239  06AD  347C               	retlw	124
   240  06AE  3400               	retlw	0
   241  06AF  3400               	retlw	0
   242  06B0  3400               	retlw	0
   243  06B1  34FD               	retlw	253
   244  06B2  3400               	retlw	0
   245  06B3  3400               	retlw	0
   246  06B4  3400               	retlw	0
   247  06B5  3444               	retlw	68
   248  06B6  3402               	retlw	2
   249  06B7  3412               	retlw	18
   250  06B8  3402               	retlw	2
   251  06B9  3444               	retlw	68
   252  06BA  3400               	retlw	0
   253  06BB  3408               	retlw	8
   254  06BC  341C               	retlw	28
   255  06BD  342A               	retlw	42
   256  06BE  3408               	retlw	8
   257  06BF  3408               	retlw	8
   258  06C0  3400               	retlw	0
   259  06C1  3414               	retlw	20
   260  06C2  3414               	retlw	20
   261  06C3  3414               	retlw	20
   262  06C4  3414               	retlw	20
   263  06C5  3414               	retlw	20
   264  06C6  3400               	retlw	0
   265  06C7  3410               	retlw	16
   266  06C8  3410               	retlw	16
   267  06C9  3454               	retlw	84
   268  06CA  3438               	retlw	56
   269  06CB  3410               	retlw	16
   270  06CC  3400               	retlw	0
   271  06CD  3460               	retlw	96
   272  06CE  3480               	retlw	128
   273  06CF  348D               	retlw	141
   274  06D0  3490               	retlw	144
   275  06D1  3460               	retlw	96
   276  06D2  3400               	retlw	0
   277  06D3  3466               	retlw	102
   278  06D4  3489               	retlw	137
   279  06D5  348F               	retlw	143
   280  06D6  3481               	retlw	129
   281  06D7  347E               	retlw	126
   282  06D8  3400               	retlw	0
   283  06D9  347F               	retlw	127
   284  06DA  3488               	retlw	136
   285  06DB  3488               	retlw	136
   286  06DC  3488               	retlw	136
   287  06DD  347F               	retlw	127
   288  06DE  3400               	retlw	0
   289  06DF  34FF               	retlw	255
   290  06E0  3491               	retlw	145
   291  06E1  3491               	retlw	145
   292  06E2  3491               	retlw	145
   293  06E3  346E               	retlw	110
   294  06E4  3400               	retlw	0
   295  06E5  347E               	retlw	126
   296  06E6  3481               	retlw	129
   297  06E7  3481               	retlw	129
   298  06E8  3481               	retlw	129
   299  06E9  3442               	retlw	66
   300  06EA  3400               	retlw	0
   301  06EB  34FF               	retlw	255
   302  06EC  3481               	retlw	129
   303  06ED  3481               	retlw	129
   304  06EE  3442               	retlw	66
   305  06EF  343C               	retlw	60
   306  06F0  3400               	retlw	0
   307  06F1  34FF               	retlw	255
   308  06F2  3491               	retlw	145
   309  06F3  3491               	retlw	145
   310  06F4  3491               	retlw	145
   311  06F5  3481               	retlw	129
   312  06F6  3400               	retlw	0
   313  06F7  34FF               	retlw	255
   314  06F8  3490               	retlw	144
   315  06F9  3490               	retlw	144
   316  06FA  3490               	retlw	144
   317  06FB  3480               	retlw	128
   318  06FC  3400               	retlw	0
   319  06FD  347E               	retlw	126
   320  06FE  3481               	retlw	129
   321  06FF  3489               	retlw	137
   322  0700  3489               	retlw	137
   323  0701  344E               	retlw	78
   324  0702  3400               	retlw	0
   325  0703  34FF               	retlw	255
   326  0704  3410               	retlw	16
   327  0705  3410               	retlw	16
   328  0706  3410               	retlw	16
   329  0707  34FF               	retlw	255
   330  0708  3400               	retlw	0
   331  0709  3481               	retlw	129
   332  070A  3481               	retlw	129
   333  070B  34FF               	retlw	255
   334  070C  3481               	retlw	129
   335  070D  3481               	retlw	129
   336  070E  3400               	retlw	0
   337  070F  3406               	retlw	6
   338  0710  3401               	retlw	1
   339  0711  3401               	retlw	1
   340  0712  3401               	retlw	1
   341  0713  34FE               	retlw	254
   342  0714  3400               	retlw	0
   343  0715  34FF               	retlw	255
   344  0716  3418               	retlw	24
   345  0717  3424               	retlw	36
   346  0718  3442               	retlw	66
   347  0719  3481               	retlw	129
   348  071A  3400               	retlw	0
   349  071B  34FF               	retlw	255
   350  071C  3401               	retlw	1
   351  071D  3401               	retlw	1
   352  071E  3401               	retlw	1
   353  071F  3401               	retlw	1
   354  0720  3400               	retlw	0
   355  0721  34FF               	retlw	255
   356  0722  3440               	retlw	64
   357  0723  3430               	retlw	48
   358  0724  3440               	retlw	64
   359  0725  34FF               	retlw	255
   360  0726  3400               	retlw	0
   361  0727  34FF               	retlw	255
   362  0728  3440               	retlw	64
   363  0729  3430               	retlw	48
   364  072A  3408               	retlw	8
   365  072B  34FF               	retlw	255
   366  072C  3400               	retlw	0
   367  072D  347E               	retlw	126
   368  072E  3481               	retlw	129
   369  072F  3481               	retlw	129
   370  0730  3481               	retlw	129
   371  0731  347E               	retlw	126
   372  0732  3400               	retlw	0
   373  0733  34FF               	retlw	255
   374  0734  3488               	retlw	136
   375  0735  3488               	retlw	136
   376  0736  3488               	retlw	136
   377  0737  3470               	retlw	112
   378  0738  3400               	retlw	0
   379  0739  347E               	retlw	126
   380  073A  3481               	retlw	129
   381  073B  3485               	retlw	133
   382  073C  3482               	retlw	130
   383  073D  347D               	retlw	125
   384  073E  3400               	retlw	0
   385  073F  34FF               	retlw	255
   386  0740  3488               	retlw	136
   387  0741  348C               	retlw	140
   388  0742  348A               	retlw	138
   389  0743  3471               	retlw	113
   390  0744  3400               	retlw	0
   391  0745  3461               	retlw	97
   392  0746  3491               	retlw	145
   393  0747  3491               	retlw	145
   394  0748  3491               	retlw	145
   395  0749  348E               	retlw	142
   396  074A  3400               	retlw	0
   397  074B  3480               	retlw	128
   398  074C  3480               	retlw	128
   399  074D  34FF               	retlw	255
   400  074E  3480               	retlw	128
   401  074F  3480               	retlw	128
   402  0750  3400               	retlw	0
   403  0751  34FE               	retlw	254
   404  0752  3401               	retlw	1
   405  0753  3401               	retlw	1
   406  0754  3401               	retlw	1
   407  0755  34FE               	retlw	254
   408  0756  3400               	retlw	0
   409  0757  34F0               	retlw	240
   410  0758  340C               	retlw	12
   411  0759  3403               	retlw	3
   412  075A  340C               	retlw	12
   413  075B  34F0               	retlw	240
   414  075C  3400               	retlw	0
   415  075D  34FF               	retlw	255
   416  075E  3402               	retlw	2
   417  075F  340C               	retlw	12
   418  0760  3402               	retlw	2
   419  0761  34FF               	retlw	255
   420  0762  3400               	retlw	0
   421  0763  34C3               	retlw	195
   422  0764  3424               	retlw	36
   423  0765  3418               	retlw	24
   424  0766  3424               	retlw	36
   425  0767  34C3               	retlw	195
   426  0768  3400               	retlw	0
   427  0769  34E0               	retlw	224
   428  076A  3410               	retlw	16
   429  076B  340F               	retlw	15
   430  076C  3410               	retlw	16
   431  076D  34E0               	retlw	224
   432  076E  3400               	retlw	0
   433  076F  3483               	retlw	131
   434  0770  3485               	retlw	133
   435  0771  3499               	retlw	153
   436  0772  34A1               	retlw	161
   437  0773  34C1               	retlw	193
   438  0774                     __end_of_matrixFont:	
   439  0774                     _message:	
   440  0774  3441               	retlw	65
   441  0775  3441               	retlw	65
   442  0776  3444               	retlw	68
   443  0777  3449               	retlw	73
   444  0778  3420               	retlw	32
   445  0779  344B               	retlw	75
   446  077A  3449               	retlw	73
   447  077B  3452               	retlw	82
   448  077C  3441               	retlw	65
   449  077D  344E               	retlw	78
   450  077E  3400               	retlw	0
   451  077F                     __end_of_message:	
   452  077F                     _display_length:	
   453  077F  340A               	retlw	10
   454  0780                     __end_of_display_length:	
   455  001F                     _CMCON	set	31
   456  0006                     _PORTB	set	6
   457  0029                     _RA1	set	41
   458  0086                     _TRISB	set	134
   459  0429                     _TRISA1	set	1065
   460                           
   461                           ; #config settings
   462  0000                     
   463                           	psect	cinit
   464  07F8                     start_initialization:	
   465  07F8                     __initialization:	
   466                           
   467                           ; Clear objects allocated to BANK0
   468  07F8  01AC               	clrf	__pbssBANK0& (0+127)
   469                           
   470                           ; Clear objects allocated to BANK1
   471  07F9  1383               	bcf	3,7	;select IRP bank0
   472  07FA  30A0               	movlw	low __pbssBANK1
   473  07FB  0084               	movwf	4
   474  07FC  30E8               	movlw	low (__pbssBANK1+72)
   475  07FD  27EF               	fcall	clear_ram0
   476  07FE                     end_of_initialization:	
   477                           ;End of C runtime variable initialization code
   478                           
   479  07FE                     __end_of__initialization:	
   480  07FE  0183               	clrf	3
   481  07FF  2D3A               	ljmp	_main	;jump to C main() function
   482                           
   483                           	psect	bssBANK0
   484  002C                     __pbssBANK0:	
   485  002C                     _buffer_length:	
   486  002C                     	ds	1
   487                           
   488                           	psect	bssBANK1
   489  00A0                     __pbssBANK1:	
   490  00A0                     _display_buffer:	
   491  00A0                     	ds	72
   492                           
   493                           	psect	clrtext
   494  07EF                     clear_ram0:	
   495                           ;	Called with FSR containing the base address, and
   496                           ;	W with the last address+1
   497                           
   498  07EF  0064               	clrwdt	;clear the watchdog before getting into this loop
   499  07F0                     clrloop0:	
   500  07F0  0180               	clrf	0	;clear RAM location pointed to by FSR
   501  07F1  0A84               	incf	4,f	;increment pointer
   502  07F2  0604               	xorwf	4,w	;XOR with final address
   503  07F3  1903               	btfsc	3,2	;have we reached the end yet?
   504  07F4  3400               	retlw	0	;all done for this memory range, return
   505  07F5  0604               	xorwf	4,w	;XOR again to restore value
   506  07F6  2FF0               	goto	clrloop0	;do the next byte
   507                           
   508                           	psect	cstackCOMMON
   509  0070                     __pcstackCOMMON:	
   510  0070                     ?_setUpBuffer:	
   511  0070                     ?_run:	
   512                           ; 0 bytes @ 0x0
   513                           
   514  0070                     ??_run:	
   515                           ; 0 bytes @ 0x0
   516                           
   517  0070                     ??_spread:	
   518                           ; 0 bytes @ 0x0
   519                           
   520  0070                     ??_ascii2font:	
   521                           ; 0 bytes @ 0x0
   522                           
   523  0070                     ?_spread:	
   524                           ; 0 bytes @ 0x0
   525                           
   526  0070                     ?_ascii2font:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ascii2font@ascii:	
   530                           ; 1 bytes @ 0x0
   531                           
   532                           
   533                           ; 1 bytes @ 0x0
   534  0070                     	ds	1
   535  0071                     ?___wmul:	
   536  0071                     run@i:	
   537                           ; 2 bytes @ 0x1
   538                           
   539  0071                     ___wmul@multiplier:	
   540                           ; 2 bytes @ 0x1
   541                           
   542                           
   543                           ; 2 bytes @ 0x1
   544  0071                     	ds	2
   545  0073                     ___wmul@multiplicand:	
   546                           
   547                           ; 2 bytes @ 0x3
   548  0073                     	ds	1
   549  0074                     spread@b:	
   550                           
   551                           ; 1 bytes @ 0x4
   552  0074                     	ds	1
   553  0075                     ??___wmul:	
   554  0075                     ___wmul@product:	
   555                           ; 0 bytes @ 0x5
   556                           
   557                           
   558                           ; 2 bytes @ 0x5
   559  0075                     	ds	2
   560  0077                     ??_setUpBuffer:	
   561                           
   562                           ; 0 bytes @ 0x7
   563  0077                     	ds	7
   564                           
   565                           	psect	cstackBANK0
   566  0020                     __pcstackBANK0:	
   567  0020                     setUpBuffer@j:	
   568                           
   569                           ; 2 bytes @ 0x0
   570  0020                     	ds	2
   571  0022                     setUpBuffer@currentChar:	
   572                           
   573                           ; 2 bytes @ 0x2
   574  0022                     	ds	2
   575  0024                     ?_main:	
   576  0024                     main@argc:	
   577                           ; 2 bytes @ 0x4
   578                           
   579                           
   580                           ; 2 bytes @ 0x4
   581  0024                     	ds	2
   582  0026                     main@argv:	
   583                           
   584                           ; 2 bytes @ 0x6
   585  0026                     	ds	2
   586  0028                     ??_main:	
   587                           
   588                           ; 0 bytes @ 0x8
   589  0028                     	ds	2
   590  002A                     main@last_sensor:	
   591                           
   592                           ; 1 bytes @ 0xA
   593  002A                     	ds	1
   594  002B                     main@sensor:	
   595                           
   596                           ; 1 bytes @ 0xB
   597  002B                     	ds	1
   598                           
   599                           	psect	maintext
   600  053A                     __pmaintext:	
   601 ;;
   602 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   603 ;;
   604 ;; *************** function _main *****************
   605 ;; Defined at:
   606 ;;		line 41 in file "main.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  argc            2    4[BANK0 ] int 
   609 ;;  argv            2    6[BANK0 ] PTR PTR unsigned char 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  sensor          1   11[BANK0 ] unsigned char 
   612 ;;  last_sensor     1   10[BANK0 ] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  2    4[BANK0 ] int 
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 17F/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   622 ;;      Params:         0       4       0       0
   623 ;;      Locals:         0       2       0       0
   624 ;;      Temps:          0       2       0       0
   625 ;;      Totals:         0       8       0       0
   626 ;;Total ram usage:        8 bytes
   627 ;; Hardware stack levels required when called:    2
   628 ;; This function calls:
   629 ;;		_run
   630 ;;		_setUpBuffer
   631 ;; This function is called by:
   632 ;;		Startup code after reset
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _main
   638  053A                     _main:	
   639                           
   640                           ;main.c: 42: uint8_t sensor, last_sensor;
   641                           ;main.c: 43: TRISB = 0x0;
   642                           
   643                           ;incstack = 0
   644                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   645  053A  1683               	bsf	3,5	;RP0=1, select bank1
   646  053B  1303               	bcf	3,6	;RP1=0, select bank1
   647  053C  0186               	clrf	6	;volatile
   648                           
   649                           ;main.c: 44: CMCON = 0x07;
   650  053D  3007               	movlw	7
   651  053E  1283               	bcf	3,5	;RP0=0, select bank0
   652  053F  1303               	bcf	3,6	;RP1=0, select bank0
   653  0540  009F               	movwf	31	;volatile
   654                           
   655                           ;main.c: 45: TRISA1 = 1;
   656  0541  1683               	bsf	3,5	;RP0=1, select bank1
   657  0542  1303               	bcf	3,6	;RP1=0, select bank1
   658  0543  1485               	bsf	5,1	;volatile
   659                           
   660                           ;main.c: 46: setUpBuffer();
   661  0544  256D               	fcall	_setUpBuffer
   662                           
   663                           ;main.c: 47: sensor = RA1 & 1;
   664  0545  3000               	movlw	0
   665  0546  1283               	bcf	3,5	;RP0=0, select bank0
   666  0547  1303               	bcf	3,6	;RP1=0, select bank0
   667  0548  1885               	btfsc	5,1	;volatile
   668  0549  3001               	movlw	1
   669  054A  3901               	andlw	1
   670  054B  00A8               	movwf	??_main
   671  054C  0828               	movf	??_main,w
   672  054D  00AB               	movwf	main@sensor
   673  054E                     L1:	
   674                           
   675                           ;main.c: 48: last_sensor = sensor;
   676  054E  082B               	movf	main@sensor,w
   677  054F  00A8               	movwf	??_main
   678  0550  0828               	movf	??_main,w
   679  0551  00AA               	movwf	main@last_sensor
   680                           
   681                           ;main.c: 50: {
   682                           ;main.c: 58: sensor = RA1 & 1;
   683                           
   684                           ;main.c: 49: while(1)
   685  0552  3000               	movlw	0
   686  0553  1885               	btfsc	5,1	;volatile
   687  0554  3001               	movlw	1
   688  0555  3901               	andlw	1
   689  0556  00A8               	movwf	??_main
   690  0557  0828               	movf	??_main,w
   691  0558  00AB               	movwf	main@sensor
   692                           
   693                           ;main.c: 59: if( (sensor != last_sensor) && sensor == 0 ){
   694  0559  082B               	movf	main@sensor,w
   695  055A  062A               	xorwf	main@last_sensor,w
   696  055B  1903               	skipnz
   697  055C  2D6A               	goto	l679
   698  055D  08AB               	movf	main@sensor,f
   699  055E  1D03               	skipz
   700  055F  2D6A               	goto	l679
   701                           
   702                           ;main.c: 60: _delay((unsigned long)((160)*(4000000/4000.0)));
   703  0560  30D0               	movlw	208
   704  0561  00A9               	movwf	??_main+1
   705  0562  30C9               	movlw	201
   706  0563  00A8               	movwf	??_main
   707  0564                     u337:	
   708  0564  0BA8               	decfsz	??_main,f
   709  0565  2D64               	goto	u337
   710  0566  0BA9               	decfsz	??_main+1,f
   711  0567  2D64               	goto	u337
   712  0568  2D69               	nop2
   713                           
   714                           ;main.c: 61: run();
   715  0569  27C7               	fcall	_run
   716  056A                     l679:	
   717                           
   718                           ;main.c: 62: }
   719                           ;main.c: 63: last_sensor = sensor;
   720  056A  1283               	bcf	3,5	;RP0=0, select bank0
   721  056B  1303               	bcf	3,6	;RP1=0, select bank0
   722  056C  2D4E               	goto	L1
   723  056D                     __end_of_main:	
   724                           ;main.c: 64: }
   725                           ;main.c: 65: return 0;
   726                           ;	Return value of _main is never used
   727                           
   728                           
   729                           	psect	text1
   730  056D                     __ptext1:	
   731 ;; *************** function _setUpBuffer *****************
   732 ;; Defined at:
   733 ;;		line 71 in file "main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  currentChar     2    2[BANK0 ] int 
   738 ;;  j               2    0[BANK0 ] int 
   739 ;; Return value:  Size  Location     Type
   740 ;;		None               void
   741 ;; Registers used:
   742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   748 ;;      Params:         0       0       0       0
   749 ;;      Locals:         0       4       0       0
   750 ;;      Temps:          7       0       0       0
   751 ;;      Totals:         7       4       0       0
   752 ;;Total ram usage:       11 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    1
   755 ;; This function calls:
   756 ;;		___wmul
   757 ;;		_ascii2font
   758 ;;		_spread
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function _setUpBuffer
   766  056D                     _setUpBuffer:	
   767                           
   768                           ;main.c: 72: int j, currentChar=0;
   769                           
   770                           ;incstack = 0
   771                           ; Regs used in _setUpBuffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   772  056D  1283               	bcf	3,5	;RP0=0, select bank0
   773  056E  1303               	bcf	3,6	;RP1=0, select bank0
   774  056F  01A2               	clrf	setUpBuffer@currentChar
   775  0570  01A3               	clrf	setUpBuffer@currentChar+1
   776                           
   777                           ;main.c: 73: for(currentChar=0; currentChar<display_length; currentChar++) {
   778  0571  01A2               	clrf	setUpBuffer@currentChar
   779  0572  01A3               	clrf	setUpBuffer@currentChar+1
   780  0573  307F               	movlw	low (_display_length| (0+32768))
   781  0574  0084               	movwf	4
   782  0575  3087               	movlw	high (_display_length| (0+32768))
   783  0576  00FF               	movwf	127
   784  0577  2600               	fcall	stringtab
   785  0578  00F7               	movwf	??_setUpBuffer
   786  0579  0823               	movf	setUpBuffer@currentChar+1,w
   787  057A  3A80               	xorlw	128
   788  057B  00F8               	movwf	??_setUpBuffer+1
   789  057C  3080               	movlw	128
   790  057D  0278               	subwf	??_setUpBuffer+1,w
   791  057E  1D03               	skipz
   792  057F  2D82               	goto	u265
   793  0580  0877               	movf	??_setUpBuffer,w
   794  0581  0222               	subwf	setUpBuffer@currentChar,w
   795  0582                     u265:	
   796  0582  1803               	btfsc	3,0
   797  0583  2DF8               	goto	l643
   798  0584                     l625:	
   799                           
   800                           ;main.c: 75: for(j=0; j<6; j++) {
   801  0584  1283               	bcf	3,5	;RP0=0, select bank0
   802  0585  1303               	bcf	3,6	;RP1=0, select bank0
   803  0586  01A0               	clrf	setUpBuffer@j
   804  0587  01A1               	clrf	setUpBuffer@j+1
   805  0588  0821               	movf	setUpBuffer@j+1,w
   806  0589  3A80               	xorlw	128
   807  058A  00FF               	movwf	127
   808  058B  3080               	movlw	128
   809  058C  027F               	subwf	127,w
   810  058D  1D03               	skipz
   811  058E  2D91               	goto	u275
   812  058F  3006               	movlw	6
   813  0590  0220               	subwf	setUpBuffer@j,w
   814  0591                     u275:	
   815  0591  1803               	btfsc	3,0
   816  0592  2DDF               	goto	l639
   817  0593                     l631:	
   818                           
   819                           ;main.c: 76: display_buffer[buffer_length] = spread(matrixFont[ascii2font(message[curren
      +                          tChar])][j]);
   820  0593  1283               	bcf	3,5	;RP0=0, select bank0
   821  0594  1303               	bcf	3,6	;RP1=0, select bank0
   822  0595  0822               	movf	setUpBuffer@currentChar,w
   823  0596  3E74               	addlw	low (_message| (0+32768))
   824  0597  0084               	movwf	4
   825  0598  3087               	movlw	high (_message| (0+32768))
   826  0599  1803               	skipnc
   827  059A  3E01               	addlw	1
   828  059B  00FF               	movwf	127
   829  059C  2600               	fcall	stringtab
   830  059D  2512               	fcall	_ascii2font
   831  059E  00F7               	movwf	??_setUpBuffer
   832  059F  01F8               	clrf	??_setUpBuffer+1
   833  05A0  0877               	movf	??_setUpBuffer,w
   834  05A1  00F1               	movwf	___wmul@multiplier
   835  05A2  0878               	movf	??_setUpBuffer+1,w
   836  05A3  00F2               	movwf	___wmul@multiplier+1
   837  05A4  3006               	movlw	6
   838  05A5  00F3               	movwf	___wmul@multiplicand
   839  05A6  3000               	movlw	0
   840  05A7  00F4               	movwf	___wmul@multiplicand+1
   841  05A8  2517               	fcall	___wmul
   842  05A9  3012               	movlw	low (_matrixFont| (0+32768))
   843  05AA  00F9               	movwf	??_setUpBuffer+2
   844  05AB  3086               	movlw	high (_matrixFont| (0+32768))
   845  05AC  00FA               	movwf	??_setUpBuffer+3
   846  05AD  0871               	movf	?___wmul,w
   847  05AE  0779               	addwf	??_setUpBuffer+2,w
   848  05AF  00FB               	movwf	??_setUpBuffer+4
   849  05B0  0872               	movf	?___wmul+1,w
   850  05B1  1803               	skipnc
   851  05B2  0A72               	incf	?___wmul+1,w
   852  05B3  077A               	addwf	??_setUpBuffer+3,w
   853  05B4  00FC               	movwf	??_setUpBuffer+5
   854  05B5  1283               	bcf	3,5	;RP0=0, select bank0
   855  05B6  1303               	bcf	3,6	;RP1=0, select bank0
   856  05B7  0820               	movf	setUpBuffer@j,w
   857  05B8  077B               	addwf	??_setUpBuffer+4,w
   858  05B9  0084               	movwf	4
   859  05BA  0821               	movf	setUpBuffer@j+1,w
   860  05BB  1803               	skipnc
   861  05BC  0A21               	incf	setUpBuffer@j+1,w
   862  05BD  077C               	addwf	??_setUpBuffer+5,w
   863  05BE  00FF               	movwf	127
   864  05BF  2600               	fcall	stringtab
   865  05C0  2780               	fcall	_spread
   866  05C1  00FD               	movwf	??_setUpBuffer+6
   867  05C2  1283               	bcf	3,5	;RP0=0, select bank0
   868  05C3  1303               	bcf	3,6	;RP1=0, select bank0
   869  05C4  082C               	movf	_buffer_length,w
   870  05C5  3EA0               	addlw	_display_buffer& (0+255)
   871  05C6  0084               	movwf	4
   872  05C7  087D               	movf	??_setUpBuffer+6,w
   873  05C8  1383               	bcf	3,7	;select IRP bank1
   874  05C9  0080               	movwf	0
   875                           
   876                           ;main.c: 77: buffer_length++;
   877  05CA  3001               	movlw	1
   878  05CB  00F7               	movwf	??_setUpBuffer
   879  05CC  0877               	movf	??_setUpBuffer,w
   880  05CD  07AC               	addwf	_buffer_length,f
   881  05CE  3001               	movlw	1
   882  05CF  07A0               	addwf	setUpBuffer@j,f
   883  05D0  1803               	skipnc
   884  05D1  0AA1               	incf	setUpBuffer@j+1,f
   885  05D2  3000               	movlw	0
   886  05D3  07A1               	addwf	setUpBuffer@j+1,f
   887  05D4  0821               	movf	setUpBuffer@j+1,w
   888  05D5  3A80               	xorlw	128
   889  05D6  00FF               	movwf	127
   890  05D7  3080               	movlw	128
   891  05D8  027F               	subwf	127,w
   892  05D9  1D03               	skipz
   893  05DA  2DDD               	goto	u285
   894  05DB  3006               	movlw	6
   895  05DC  0220               	subwf	setUpBuffer@j,w
   896  05DD                     u285:	
   897  05DD  1C03               	skipc
   898  05DE  2D93               	goto	l631
   899  05DF                     l639:	
   900  05DF  3001               	movlw	1
   901  05E0  1283               	bcf	3,5	;RP0=0, select bank0
   902  05E1  1303               	bcf	3,6	;RP1=0, select bank0
   903  05E2  07A2               	addwf	setUpBuffer@currentChar,f
   904  05E3  1803               	skipnc
   905  05E4  0AA3               	incf	setUpBuffer@currentChar+1,f
   906  05E5  3000               	movlw	0
   907  05E6  07A3               	addwf	setUpBuffer@currentChar+1,f
   908  05E7  307F               	movlw	low (_display_length| (0+32768))
   909  05E8  0084               	movwf	4
   910  05E9  3087               	movlw	high (_display_length| (0+32768))
   911  05EA  00FF               	movwf	127
   912  05EB  2600               	fcall	stringtab
   913  05EC  00F7               	movwf	??_setUpBuffer
   914  05ED  0823               	movf	setUpBuffer@currentChar+1,w
   915  05EE  3A80               	xorlw	128
   916  05EF  00F8               	movwf	??_setUpBuffer+1
   917  05F0  3080               	movlw	128
   918  05F1  0278               	subwf	??_setUpBuffer+1,w
   919  05F2  1D03               	skipz
   920  05F3  2DF6               	goto	u295
   921  05F4  0877               	movf	??_setUpBuffer,w
   922  05F5  0222               	subwf	setUpBuffer@currentChar,w
   923  05F6                     u295:	
   924  05F6  1C03               	skipc
   925  05F7  2D84               	goto	l625
   926  05F8                     l643:	
   927                           
   928                           ;main.c: 78: }
   929                           ;main.c: 79: }
   930                           ;main.c: 80: display_buffer[buffer_length] = 0;
   931  05F8  1283               	bcf	3,5	;RP0=0, select bank0
   932  05F9  1303               	bcf	3,6	;RP1=0, select bank0
   933  05FA  082C               	movf	_buffer_length,w
   934  05FB  3EA0               	addlw	_display_buffer& (0+255)
   935  05FC  0084               	movwf	4
   936  05FD  1383               	bcf	3,7	;select IRP bank1
   937  05FE  0180               	clrf	0
   938  05FF  0008               	return
   939  0600                     __end_of_setUpBuffer:	
   940                           
   941                           	psect	text2
   942  0780                     __ptext2:	
   943 ;; *************** function _spread *****************
   944 ;; Defined at:
   945 ;;		line 87 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  b               1    wreg     unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  b               1    4[COMMON] unsigned char 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      unsigned char 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   959 ;;      Params:         0       0       0       0
   960 ;;      Locals:         1       0       0       0
   961 ;;      Temps:          4       0       0       0
   962 ;;      Totals:         5       0       0       0
   963 ;;Total ram usage:        5 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_setUpBuffer
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           
   973                           ;psect for function _spread
   974  0780                     _spread:	
   975                           
   976                           ;incstack = 0
   977                           ; Regs used in _spread: [wreg+status,2+status,0]
   978                           ;spread@b stored from wreg
   979  0780  00F4               	movwf	spread@b
   980                           
   981                           ;main.c: 88: b = ((b & 0x55) << 1) | ((b >> 1) & 0x55);
   982  0781  0874               	movf	spread@b,w
   983  0782  00F0               	movwf	??_spread
   984  0783  3001               	movlw	1
   985  0784                     u175:	
   986  0784  1003               	clrc
   987  0785  0CF0               	rrf	??_spread,f
   988  0786  3EFF               	addlw	-1
   989  0787  1D03               	skipz
   990  0788  2F84               	goto	u175
   991  0789  3055               	movlw	85
   992  078A  0570               	andwf	??_spread,w
   993  078B  00F1               	movwf	??_spread+1
   994  078C  0874               	movf	spread@b,w
   995  078D  3955               	andlw	85
   996  078E  00F2               	movwf	??_spread+2
   997  078F  0772               	addwf	??_spread+2,w
   998  0790  0471               	iorwf	??_spread+1,w
   999  0791  00F3               	movwf	??_spread+3
  1000  0792  0873               	movf	??_spread+3,w
  1001  0793  00F4               	movwf	spread@b
  1002                           
  1003                           ;main.c: 89: b = ((b & 0x33) << 2) | ((b >> 2) & 0x33);
  1004  0794  0874               	movf	spread@b,w
  1005  0795  00F0               	movwf	??_spread
  1006  0796  3002               	movlw	2
  1007  0797                     u185:	
  1008  0797  1003               	clrc
  1009  0798  0CF0               	rrf	??_spread,f
  1010  0799  3EFF               	addlw	-1
  1011  079A  1D03               	skipz
  1012  079B  2F97               	goto	u185
  1013  079C  3033               	movlw	51
  1014  079D  0570               	andwf	??_spread,w
  1015  079E  00F1               	movwf	??_spread+1
  1016  079F  0874               	movf	spread@b,w
  1017  07A0  3933               	andlw	51
  1018  07A1  00F2               	movwf	??_spread+2
  1019  07A2  3001               	movlw	1
  1020  07A3                     u195:	
  1021  07A3  1003               	clrc
  1022  07A4  0DF2               	rlf	??_spread+2,f
  1023  07A5  3EFF               	addlw	-1
  1024  07A6  1D03               	skipz
  1025  07A7  2FA3               	goto	u195
  1026  07A8  1003               	clrc
  1027  07A9  0D72               	rlf	??_spread+2,w
  1028  07AA  0471               	iorwf	??_spread+1,w
  1029  07AB  00F3               	movwf	??_spread+3
  1030  07AC  0873               	movf	??_spread+3,w
  1031  07AD  00F4               	movwf	spread@b
  1032                           
  1033                           ;main.c: 90: b = ((b & 0x0F) << 4) | (b >> 4);
  1034  07AE  0874               	movf	spread@b,w
  1035  07AF  00F0               	movwf	??_spread
  1036  07B0  3004               	movlw	4
  1037  07B1                     u205:	
  1038  07B1  1003               	clrc
  1039  07B2  0CF0               	rrf	??_spread,f
  1040  07B3  3EFF               	addlw	-1
  1041  07B4  1D03               	skipz
  1042  07B5  2FB1               	goto	u205
  1043  07B6  0874               	movf	spread@b,w
  1044  07B7  390F               	andlw	15
  1045  07B8  00F1               	movwf	??_spread+1
  1046  07B9  3003               	movlw	3
  1047  07BA                     u215:	
  1048  07BA  1003               	clrc
  1049  07BB  0DF1               	rlf	??_spread+1,f
  1050  07BC  3EFF               	addlw	-1
  1051  07BD  1D03               	skipz
  1052  07BE  2FBA               	goto	u215
  1053  07BF  1003               	clrc
  1054  07C0  0D71               	rlf	??_spread+1,w
  1055  07C1  0470               	iorwf	??_spread,w
  1056  07C2  00F2               	movwf	??_spread+2
  1057  07C3  0872               	movf	??_spread+2,w
  1058  07C4  00F4               	movwf	spread@b
  1059                           
  1060                           ;main.c: 92: return b;
  1061  07C5  0874               	movf	spread@b,w
  1062  07C6  0008               	return
  1063  07C7                     __end_of_spread:	
  1064                           
  1065                           	psect	text3
  1066  0512                     __ptext3:	
  1067 ;; *************** function _ascii2font *****************
  1068 ;; Defined at:
  1069 ;;		line 83 in file "main.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  ascii           1    wreg     unsigned char 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  ascii           1    0[COMMON] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      unsigned char 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1083 ;;      Params:         0       0       0       0
  1084 ;;      Locals:         1       0       0       0
  1085 ;;      Temps:          0       0       0       0
  1086 ;;      Totals:         1       0       0       0
  1087 ;;Total ram usage:        1 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_setUpBuffer
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _ascii2font
  1098  0512                     _ascii2font:	
  1099                           
  1100                           ;incstack = 0
  1101                           ; Regs used in _ascii2font: [wreg+status,2+status,0]
  1102                           ;ascii2font@ascii stored from wreg
  1103  0512  00F0               	movwf	ascii2font@ascii
  1104                           
  1105                           ;main.c: 84: ascii -= 0x20;
  1106  0513  3020               	movlw	32
  1107  0514  02F0               	subwf	ascii2font@ascii,f
  1108                           
  1109                           ;main.c: 85: return ascii;
  1110  0515  0870               	movf	ascii2font@ascii,w
  1111  0516  0008               	return
  1112  0517                     __end_of_ascii2font:	
  1113                           
  1114                           	psect	text4
  1115  0517                     __ptext4:	
  1116 ;; *************** function ___wmul *****************
  1117 ;; Defined at:
  1118 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  multiplier      2    1[COMMON] unsigned int 
  1121 ;;  multiplicand    2    3[COMMON] unsigned int 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  product         2    5[COMMON] unsigned int 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2    1[COMMON] unsigned int 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1133 ;;      Params:         4       0       0       0
  1134 ;;      Locals:         2       0       0       0
  1135 ;;      Temps:          0       0       0       0
  1136 ;;      Totals:         6       0       0       0
  1137 ;;Total ram usage:        6 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_setUpBuffer
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function ___wmul
  1148  0517                     ___wmul:	
  1149                           
  1150                           ;incstack = 0
  1151                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1152  0517  01F5               	clrf	___wmul@product
  1153  0518  01F6               	clrf	___wmul@product+1
  1154  0519                     l609:	
  1155  0519  1C71               	btfss	___wmul@multiplier,0
  1156  051A  2D21               	goto	l140
  1157  051B  0873               	movf	___wmul@multiplicand,w
  1158  051C  07F5               	addwf	___wmul@product,f
  1159  051D  1803               	skipnc
  1160  051E  0AF6               	incf	___wmul@product+1,f
  1161  051F  0874               	movf	___wmul@multiplicand+1,w
  1162  0520  07F6               	addwf	___wmul@product+1,f
  1163  0521                     l140:	
  1164  0521  3001               	movlw	1
  1165  0522                     u235:	
  1166  0522  1003               	clrc
  1167  0523  0DF3               	rlf	___wmul@multiplicand,f
  1168  0524  0DF4               	rlf	___wmul@multiplicand+1,f
  1169  0525  3EFF               	addlw	-1
  1170  0526  1D03               	skipz
  1171  0527  2D22               	goto	u235
  1172  0528  3001               	movlw	1
  1173  0529                     u245:	
  1174  0529  1003               	clrc
  1175  052A  0CF2               	rrf	___wmul@multiplier+1,f
  1176  052B  0CF1               	rrf	___wmul@multiplier,f
  1177  052C  3EFF               	addlw	-1
  1178  052D  1D03               	skipz
  1179  052E  2D29               	goto	u245
  1180  052F  0872               	movf	___wmul@multiplier+1,w
  1181  0530  0471               	iorwf	___wmul@multiplier,w
  1182  0531  1D03               	skipz
  1183  0532  2D19               	goto	l609
  1184  0533  0876               	movf	___wmul@product+1,w
  1185  0534  01F2               	clrf	?___wmul+1
  1186  0535  07F2               	addwf	?___wmul+1,f
  1187  0536  0875               	movf	___wmul@product,w
  1188  0537  01F1               	clrf	?___wmul
  1189  0538  07F1               	addwf	?___wmul,f
  1190  0539  0008               	return
  1191  053A                     __end_of___wmul:	
  1192                           
  1193                           	psect	text5
  1194  07C7                     __ptext5:	
  1195 ;; *************** function _run *****************
  1196 ;; Defined at:
  1197 ;;		line 95 in file "main.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  i               2    1[COMMON] int 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;		None               void
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1211 ;;      Params:         0       0       0       0
  1212 ;;      Locals:         2       0       0       0
  1213 ;;      Temps:          1       0       0       0
  1214 ;;      Totals:         3       0       0       0
  1215 ;;Total ram usage:        3 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function _run
  1226  07C7                     _run:	
  1227                           
  1228                           ;main.c: 96: int i;
  1229                           ;main.c: 97: for(i=0; i<buffer_length; i++){
  1230                           
  1231                           ;incstack = 0
  1232                           ; Regs used in _run: [wreg-fsr0h+status,2+status,0]
  1233  07C7  01F1               	clrf	run@i
  1234  07C8  01F2               	clrf	run@i+1
  1235  07C9                     l655:	
  1236  07C9  0872               	movf	run@i+1,w
  1237  07CA  3A80               	xorlw	128
  1238  07CB  00F0               	movwf	??_run
  1239  07CC  3080               	movlw	128
  1240  07CD  0270               	subwf	??_run,w
  1241  07CE  1D03               	skipz
  1242  07CF  2FD4               	goto	u305
  1243  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1244  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1245  07D2  082C               	movf	_buffer_length,w
  1246  07D3  0271               	subwf	run@i,w
  1247  07D4                     u305:	
  1248  07D4  1803               	btfsc	3,0
  1249  07D5  0008               	return
  1250                           
  1251                           ;main.c: 98: PORTB = display_buffer[i];
  1252  07D6  0871               	movf	run@i,w
  1253  07D7  3EA0               	addlw	_display_buffer& (0+255)
  1254  07D8  0084               	movwf	4
  1255  07D9  1383               	bcf	3,7	;select IRP bank1
  1256  07DA  0800               	movf	0,w
  1257  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1258  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1259  07DD  0086               	movwf	6	;volatile
  1260                           
  1261                           ;main.c: 99: _delay((unsigned long)((900)*(4000000/4000000.0)));
  1262  07DE  30E0               	movlw	224
  1263  07DF  00F0               	movwf	??_run
  1264  07E0                     u347:	
  1265  07E0  0000               	nop
  1266  07E1  0BF0               	decfsz	??_run,f
  1267  07E2  2FE0               	goto	u347
  1268  07E3  2FE4               	nop2	;nop
  1269  07E4  0000               	nop
  1270                           
  1271                           ;main.c: 100: PORTB = 0x0;
  1272  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1273  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1274  07E7  0186               	clrf	6	;volatile
  1275  07E8  3001               	movlw	1
  1276  07E9  07F1               	addwf	run@i,f
  1277  07EA  1803               	skipnc
  1278  07EB  0AF2               	incf	run@i+1,f
  1279  07EC  3000               	movlw	0
  1280  07ED  07F2               	addwf	run@i+1,f
  1281  07EE  2FC9               	goto	l655
  1282  07EF                     __end_of_run:	
  1283  007E                     btemp	set	126	;btemp
  1284  007E                     wtemp	set	126
  1285  007E                     wtemp0	set	126
  1286  0080                     wtemp1	set	128
  1287  0082                     wtemp2	set	130
  1288  0084                     wtemp3	set	132
  1289  0086                     wtemp4	set	134
  1290  0088                     wtemp5	set	136
  1291  007F                     wtemp6	set	127
  1292  007E                     ttemp	set	126
  1293  007E                     ttemp0	set	126
  1294  0081                     ttemp1	set	129
  1295  0084                     ttemp2	set	132
  1296  0087                     ttemp3	set	135
  1297  007F                     ttemp4	set	127
  1298  007E                     ltemp	set	126
  1299  007E                     ltemp0	set	126
  1300  0082                     ltemp1	set	130
  1301  0086                     ltemp2	set	134
  1302  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    366
    Data        0
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      13
    BANK1            80      0      72
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setUpBuffer
    _setUpBuffer->___wmul
    ___wmul->_ascii2font

Critical Paths under _main in BANK0

    _main->_setUpBuffer

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4     675
                                              4 BANK0      8     4      4
                                _run
                        _setUpBuffer
 ---------------------------------------------------------------------------------
 (1) _setUpBuffer                                         11    11      0     515
                                              7 COMMON     7     7      0
                                              0 BANK0      4     4      0
                             ___wmul
                         _ascii2font
                             _spread
 ---------------------------------------------------------------------------------
 (2) _spread                                               5     5      0     157
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _ascii2font                                           1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              1 COMMON     6     2      4
                         _ascii2font (ARG)
 ---------------------------------------------------------------------------------
 (1) _run                                                  3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _run
   _setUpBuffer
     ___wmul
       _ascii2font (ARG)
     _ascii2font
     _spread

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      C       D       3       16.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      63       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      63      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat May 23 21:49:30 2015

                      pc 0002              __CFG_CP$OFF 0000                       fsr 0004  
    ___wmul@multiplicand 0073                      l140 0521                      l631 0593  
                    l609 0519                      l625 0584                      l643 05F8  
                    l655 07C9                      l639 05DF                      l679 056A  
                    _RA1 0029   __end_of_display_length 0780                      u205 07B1  
                    u215 07BA                      u305 07D4                      u235 0522  
                    u245 0529                      u175 0784                      u185 0797  
                    u265 0582                      u337 0564             __CFG_CPD$OFF 0000  
                    u347 07E0                      u195 07A3                      u275 0591  
                    u285 05DD                      u295 05F6                      fsr0 0004  
                    _run 07C7                      indf 0000             __CFG_LVP$OFF 0000  
                   ?_run 0070                     _main 053A                     btemp 007E  
                   ltemp 007E                     run@i 0071                     start 0000  
                   ttemp 007E                     wtemp 007E                    ??_run 0070  
                  ?_main 0024            __CFG_WDTE$OFF 0000                    _CMCON 001F  
                  _PORTB 0006                    _TRISB 0086          __end_of_message 077F  
         __CFG_BOREN$OFF 0000                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 07F8  
           __end_of_main 056D                   ??_main 0028             ?_setUpBuffer 0070  
                 _TRISA1 0429           __CFG_PWRTE$OFF 0000                   ___wmul 0517  
                 _spread 0780  __end_of__initialization 07FE           __pcstackCOMMON 0070  
             __pbssBANK0 002C               __pbssBANK1 00A0               _ascii2font 0512  
             __pmaintext 053A                  ?___wmul 0071                  ?_spread 0070  
   __size_of_setUpBuffer 0093               __stringtab 0600          ascii2font@ascii 0070  
        __size_of___wmul 0023               _matrixFont 0612                  __ptext1 056D  
                __ptext2 0780                  __ptext3 0512                  __ptext4 0517  
                __ptext5 07C7          __size_of_spread 0047             __size_of_run 0028  
                _message 0774                  clrloop0 07F0     end_of_initialization 07FE  
            ?_ascii2font 0070                  spread@b 0074             __pstringtext 0600  
             main@sensor 002B           __end_of___wmul 053A           __end_of_spread 07C7  
    start_initialization 07F8   setUpBuffer@currentChar 0022              __end_of_run 07EF  
    __size_of_ascii2font 0005                 ??___wmul 0075                 ??_spread 0070  
              ___latbits 0000            __pcstackBANK0 0020            ??_setUpBuffer 0077  
         ___wmul@product 0075                clear_ram0 07EF             ??_ascii2font 0070  
           setUpBuffer@j 0020          main@last_sensor 002A              __stringbase 0612  
      ___wmul@multiplier 0071       __end_of_ascii2font 0517      __end_of_setUpBuffer 0600  
     __end_of__stringtab 0612            __size_of_main 0033       __end_of_matrixFont 0774  
               main@argc 0024                 main@argv 0026              _setUpBuffer 056D  
              stringcode 060A            _buffer_length 002C      __CFG_FOSC$INTOSCCLK 0000  
         _display_buffer 00A0           _display_length 077F                 stringtab 0600  
