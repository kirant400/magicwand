

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun May 17 23:53:57 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F72
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  001E                     	;# 
    41  001F                     	;# 
    42  0081                     	;# 
    43  0085                     	;# 
    44  0086                     	;# 
    45  0087                     	;# 
    46  008C                     	;# 
    47  008E                     	;# 
    48  0092                     	;# 
    49  0093                     	;# 
    50  0094                     	;# 
    51  009F                     	;# 
    52  010C                     	;# 
    53  010D                     	;# 
    54  010E                     	;# 
    55  010F                     	;# 
    56  018C                     	;# 
    57                           
    58                           	psect	stringtext
    59  0600                     __pstringtext:	
    60  0600                     stringtab:	
    61  0600                     __stringtab:	
    62                           
    63                           ;	String table - string pointers are 2 bytes each
    64  0600  1BFF               	btfsc	btemp+1,7
    65  0601  2E0A               	ljmp	stringcode
    66  0602  1383               	bcf	3,7
    67  0603  187F               	btfsc	btemp+1,0
    68  0604  1783               	bsf	3,7
    69  0605  0800               	movf	0,w
    70  0606  0A84               	incf	4,f
    71  0607  1903               	skipnz
    72  0608  0AFF               	incf	btemp+1,f
    73  0609  0008               	return
    74  060A                     stringcode:	
    75  060A  087F               	movf	btemp+1,w
    76  060B  397F               	andlw	127
    77  060C  008A               	movwf	10
    78  060D  0804               	movf	4,w
    79  060E  0A84               	incf	4,f
    80  060F  1903               	skipnz
    81  0610  0AFF               	incf	btemp+1,f
    82  0611  0082               	movwf	2
    83  0612                     __stringbase:	
    84  0612                     __end_of__stringtab:	
    85  0612                     _matrixFont:	
    86  0612  3400               	retlw	0
    87  0613  3400               	retlw	0
    88  0614  3400               	retlw	0
    89  0615  3400               	retlw	0
    90  0616  3400               	retlw	0
    91  0617  3400               	retlw	0
    92  0618  3400               	retlw	0
    93  0619  3400               	retlw	0
    94  061A  3400               	retlw	0
    95  061B  34FD               	retlw	253
    96  061C  3400               	retlw	0
    97  061D  3400               	retlw	0
    98  061E  3400               	retlw	0
    99  061F  34FF               	retlw	255
   100  0620  34FF               	retlw	255
   101  0621  34FF               	retlw	255
   102  0622  34FF               	retlw	255
   103  0623  34FF               	retlw	255
   104  0624  3400               	retlw	0
   105  0625  3424               	retlw	36
   106  0626  34FF               	retlw	255
   107  0627  3424               	retlw	36
   108  0628  34FF               	retlw	255
   109  0629  3424               	retlw	36
   110  062A  3400               	retlw	0
   111  062B  3412               	retlw	18
   112  062C  342A               	retlw	42
   113  062D  347F               	retlw	127
   114  062E  342A               	retlw	42
   115  062F  3424               	retlw	36
   116  0630  3400               	retlw	0
   117  0631  34FF               	retlw	255
   118  0632  34FF               	retlw	255
   119  0633  34FF               	retlw	255
   120  0634  34FF               	retlw	255
   121  0635  34FF               	retlw	255
   122  0636  3400               	retlw	0
   123  0637  3476               	retlw	118
   124  0638  3489               	retlw	137
   125  0639  3495               	retlw	149
   126  063A  3462               	retlw	98
   127  063B  3405               	retlw	5
   128  063C  3400               	retlw	0
   129  063D  34FF               	retlw	255
   130  063E  34FF               	retlw	255
   131  063F  34FF               	retlw	255
   132  0640  34FF               	retlw	255
   133  0641  34FF               	retlw	255
   134  0642  3400               	retlw	0
   135  0643  3400               	retlw	0
   136  0644  343C               	retlw	60
   137  0645  3442               	retlw	66
   138  0646  3481               	retlw	129
   139  0647  3400               	retlw	0
   140  0648  3400               	retlw	0
   141  0649  3400               	retlw	0
   142  064A  3481               	retlw	129
   143  064B  3442               	retlw	66
   144  064C  343C               	retlw	60
   145  064D  3400               	retlw	0
   146  064E  3400               	retlw	0
   147  064F  34FF               	retlw	255
   148  0650  34FF               	retlw	255
   149  0651  34FF               	retlw	255
   150  0652  34FF               	retlw	255
   151  0653  34FF               	retlw	255
   152  0654  3400               	retlw	0
   153  0655  3408               	retlw	8
   154  0656  3408               	retlw	8
   155  0657  343E               	retlw	62
   156  0658  3408               	retlw	8
   157  0659  3408               	retlw	8
   158  065A  3400               	retlw	0
   159  065B  34FF               	retlw	255
   160  065C  34FF               	retlw	255
   161  065D  34FF               	retlw	255
   162  065E  34FF               	retlw	255
   163  065F  34FF               	retlw	255
   164  0660  3400               	retlw	0
   165  0661  3408               	retlw	8
   166  0662  3408               	retlw	8
   167  0663  3408               	retlw	8
   168  0664  3408               	retlw	8
   169  0665  3408               	retlw	8
   170  0666  3400               	retlw	0
   171  0667  34FF               	retlw	255
   172  0668  34FF               	retlw	255
   173  0669  34FF               	retlw	255
   174  066A  34FF               	retlw	255
   175  066B  34FF               	retlw	255
   176  066C  3400               	retlw	0
   177  066D  34FF               	retlw	255
   178  066E  34FF               	retlw	255
   179  066F  34FF               	retlw	255
   180  0670  34FF               	retlw	255
   181  0671  34FF               	retlw	255
   182  0672  3400               	retlw	0
   183  0673  347E               	retlw	126
   184  0674  3489               	retlw	137
   185  0675  3491               	retlw	145
   186  0676  34A1               	retlw	161
   187  0677  347E               	retlw	126
   188  0678  3400               	retlw	0
   189  0679  3400               	retlw	0
   190  067A  3441               	retlw	65
   191  067B  34FF               	retlw	255
   192  067C  3401               	retlw	1
   193  067D  3400               	retlw	0
   194  067E  3400               	retlw	0
   195  067F  3443               	retlw	67
   196  0680  3485               	retlw	133
   197  0681  3489               	retlw	137
   198  0682  3491               	retlw	145
   199  0683  3461               	retlw	97
   200  0684  3400               	retlw	0
   201  0685  3442               	retlw	66
   202  0686  3481               	retlw	129
   203  0687  3491               	retlw	145
   204  0688  3491               	retlw	145
   205  0689  346E               	retlw	110
   206  068A  3400               	retlw	0
   207  068B  3418               	retlw	24
   208  068C  3428               	retlw	40
   209  068D  3448               	retlw	72
   210  068E  34FF               	retlw	255
   211  068F  3408               	retlw	8
   212  0690  3400               	retlw	0
   213  0691  34F2               	retlw	242
   214  0692  3491               	retlw	145
   215  0693  3491               	retlw	145
   216  0694  3491               	retlw	145
   217  0695  348E               	retlw	142
   218  0696  3400               	retlw	0
   219  0697  341E               	retlw	30
   220  0698  3429               	retlw	41
   221  0699  3449               	retlw	73
   222  069A  3489               	retlw	137
   223  069B  3486               	retlw	134
   224  069C  3400               	retlw	0
   225  069D  3480               	retlw	128
   226  069E  348F               	retlw	143
   227  069F  3490               	retlw	144
   228  06A0  34A0               	retlw	160
   229  06A1  34C0               	retlw	192
   230  06A2  3400               	retlw	0
   231  06A3  346E               	retlw	110
   232  06A4  3491               	retlw	145
   233  06A5  3491               	retlw	145
   234  06A6  3491               	retlw	145
   235  06A7  346E               	retlw	110
   236  06A8  3400               	retlw	0
   237  06A9  3470               	retlw	112
   238  06AA  3489               	retlw	137
   239  06AB  3489               	retlw	137
   240  06AC  348A               	retlw	138
   241  06AD  347C               	retlw	124
   242  06AE  3400               	retlw	0
   243  06AF  3400               	retlw	0
   244  06B0  3400               	retlw	0
   245  06B1  34FD               	retlw	253
   246  06B2  3400               	retlw	0
   247  06B3  3400               	retlw	0
   248  06B4  3400               	retlw	0
   249  06B5  3444               	retlw	68
   250  06B6  3402               	retlw	2
   251  06B7  3412               	retlw	18
   252  06B8  3402               	retlw	2
   253  06B9  3444               	retlw	68
   254  06BA  3400               	retlw	0
   255  06BB  3408               	retlw	8
   256  06BC  341C               	retlw	28
   257  06BD  342A               	retlw	42
   258  06BE  3408               	retlw	8
   259  06BF  3408               	retlw	8
   260  06C0  3400               	retlw	0
   261  06C1  3414               	retlw	20
   262  06C2  3414               	retlw	20
   263  06C3  3414               	retlw	20
   264  06C4  3414               	retlw	20
   265  06C5  3414               	retlw	20
   266  06C6  3400               	retlw	0
   267  06C7  3410               	retlw	16
   268  06C8  3410               	retlw	16
   269  06C9  3454               	retlw	84
   270  06CA  3438               	retlw	56
   271  06CB  3410               	retlw	16
   272  06CC  3400               	retlw	0
   273  06CD  3460               	retlw	96
   274  06CE  3480               	retlw	128
   275  06CF  348D               	retlw	141
   276  06D0  3490               	retlw	144
   277  06D1  3460               	retlw	96
   278  06D2  3400               	retlw	0
   279  06D3  3466               	retlw	102
   280  06D4  3489               	retlw	137
   281  06D5  348F               	retlw	143
   282  06D6  3481               	retlw	129
   283  06D7  347E               	retlw	126
   284  06D8  3400               	retlw	0
   285  06D9  347F               	retlw	127
   286  06DA  3488               	retlw	136
   287  06DB  3488               	retlw	136
   288  06DC  3488               	retlw	136
   289  06DD  347F               	retlw	127
   290  06DE  3400               	retlw	0
   291  06DF  34FF               	retlw	255
   292  06E0  3491               	retlw	145
   293  06E1  3491               	retlw	145
   294  06E2  3491               	retlw	145
   295  06E3  346E               	retlw	110
   296  06E4  3400               	retlw	0
   297  06E5  347E               	retlw	126
   298  06E6  3481               	retlw	129
   299  06E7  3481               	retlw	129
   300  06E8  3481               	retlw	129
   301  06E9  3442               	retlw	66
   302  06EA  3400               	retlw	0
   303  06EB  34FF               	retlw	255
   304  06EC  3481               	retlw	129
   305  06ED  3481               	retlw	129
   306  06EE  3442               	retlw	66
   307  06EF  343C               	retlw	60
   308  06F0  3400               	retlw	0
   309  06F1  34FF               	retlw	255
   310  06F2  3491               	retlw	145
   311  06F3  3491               	retlw	145
   312  06F4  3491               	retlw	145
   313  06F5  3481               	retlw	129
   314  06F6  3400               	retlw	0
   315  06F7  34FF               	retlw	255
   316  06F8  3490               	retlw	144
   317  06F9  3490               	retlw	144
   318  06FA  3490               	retlw	144
   319  06FB  3480               	retlw	128
   320  06FC  3400               	retlw	0
   321  06FD  347E               	retlw	126
   322  06FE  3481               	retlw	129
   323  06FF  3489               	retlw	137
   324  0700  3489               	retlw	137
   325  0701  344E               	retlw	78
   326  0702  3400               	retlw	0
   327  0703  34FF               	retlw	255
   328  0704  3410               	retlw	16
   329  0705  3410               	retlw	16
   330  0706  3410               	retlw	16
   331  0707  34FF               	retlw	255
   332  0708  3400               	retlw	0
   333  0709  3481               	retlw	129
   334  070A  3481               	retlw	129
   335  070B  34FF               	retlw	255
   336  070C  3481               	retlw	129
   337  070D  3481               	retlw	129
   338  070E  3400               	retlw	0
   339  070F  3406               	retlw	6
   340  0710  3401               	retlw	1
   341  0711  3401               	retlw	1
   342  0712  3401               	retlw	1
   343  0713  34FE               	retlw	254
   344  0714  3400               	retlw	0
   345  0715  34FF               	retlw	255
   346  0716  3418               	retlw	24
   347  0717  3424               	retlw	36
   348  0718  3442               	retlw	66
   349  0719  3481               	retlw	129
   350  071A  3400               	retlw	0
   351  071B  34FF               	retlw	255
   352  071C  3401               	retlw	1
   353  071D  3401               	retlw	1
   354  071E  3401               	retlw	1
   355  071F  3401               	retlw	1
   356  0720  3400               	retlw	0
   357  0721  34FF               	retlw	255
   358  0722  3440               	retlw	64
   359  0723  3430               	retlw	48
   360  0724  3440               	retlw	64
   361  0725  34FF               	retlw	255
   362  0726  3400               	retlw	0
   363  0727  34FF               	retlw	255
   364  0728  3440               	retlw	64
   365  0729  3430               	retlw	48
   366  072A  3408               	retlw	8
   367  072B  34FF               	retlw	255
   368  072C  3400               	retlw	0
   369  072D  347E               	retlw	126
   370  072E  3481               	retlw	129
   371  072F  3481               	retlw	129
   372  0730  3481               	retlw	129
   373  0731  347E               	retlw	126
   374  0732  3400               	retlw	0
   375  0733  34FF               	retlw	255
   376  0734  3488               	retlw	136
   377  0735  3488               	retlw	136
   378  0736  3488               	retlw	136
   379  0737  3470               	retlw	112
   380  0738  3400               	retlw	0
   381  0739  347E               	retlw	126
   382  073A  3481               	retlw	129
   383  073B  3485               	retlw	133
   384  073C  3482               	retlw	130
   385  073D  347D               	retlw	125
   386  073E  3400               	retlw	0
   387  073F  34FF               	retlw	255
   388  0740  3488               	retlw	136
   389  0741  348C               	retlw	140
   390  0742  348A               	retlw	138
   391  0743  3471               	retlw	113
   392  0744  3400               	retlw	0
   393  0745  3461               	retlw	97
   394  0746  3491               	retlw	145
   395  0747  3491               	retlw	145
   396  0748  3491               	retlw	145
   397  0749  348E               	retlw	142
   398  074A  3400               	retlw	0
   399  074B  3480               	retlw	128
   400  074C  3480               	retlw	128
   401  074D  34FF               	retlw	255
   402  074E  3480               	retlw	128
   403  074F  3480               	retlw	128
   404  0750  3400               	retlw	0
   405  0751  34FE               	retlw	254
   406  0752  3401               	retlw	1
   407  0753  3401               	retlw	1
   408  0754  3401               	retlw	1
   409  0755  34FE               	retlw	254
   410  0756  3400               	retlw	0
   411  0757  34F0               	retlw	240
   412  0758  340C               	retlw	12
   413  0759  3403               	retlw	3
   414  075A  340C               	retlw	12
   415  075B  34F0               	retlw	240
   416  075C  3400               	retlw	0
   417  075D  34FF               	retlw	255
   418  075E  3402               	retlw	2
   419  075F  340C               	retlw	12
   420  0760  3402               	retlw	2
   421  0761  34FF               	retlw	255
   422  0762  3400               	retlw	0
   423  0763  34C3               	retlw	195
   424  0764  3424               	retlw	36
   425  0765  3418               	retlw	24
   426  0766  3424               	retlw	36
   427  0767  34C3               	retlw	195
   428  0768  3400               	retlw	0
   429  0769  34E0               	retlw	224
   430  076A  3410               	retlw	16
   431  076B  340F               	retlw	15
   432  076C  3410               	retlw	16
   433  076D  34E0               	retlw	224
   434  076E  3400               	retlw	0
   435  076F  3483               	retlw	131
   436  0770  3485               	retlw	133
   437  0771  3499               	retlw	153
   438  0772  34A1               	retlw	161
   439  0773  34C1               	retlw	193
   440  0774                     __end_of_matrixFont:	
   441  0774                     _message:	
   442  0774  344B               	retlw	75
   443  0775  3449               	retlw	73
   444  0776  3452               	retlw	82
   445  0777  3441               	retlw	65
   446  0778  344E               	retlw	78
   447  0779  3400               	retlw	0
   448  077A                     __end_of_message:	
   449                           
   450                           	psect	nvCOMMON
   451  007A                     __pnvCOMMON:	
   452  007A                     _display_length:	
   453  007A                     	ds	1
   454  0006                     _PORTB	set	6
   455  0028                     _RA0	set	40
   456  0029                     _RA1	set	41
   457  009F                     _ADCON1	set	159
   458  0085                     _TRISA	set	133
   459  0087                     _TRISC	set	135
   460                           
   461                           ; #config settings
   462  0000                     
   463                           	psect	cinit
   464  07FA                     start_initialization:	
   465  07FA                     __initialization:	
   466                           
   467                           ; Clear objects allocated to COMMON
   468  07FA  3040               	movlw	low __pbssCOMMON
   469  07FB  0084               	movwf	4
   470  07FC  305F               	movlw	low (__pbssCOMMON+31)
   471  07FD  27EF               	fcall	clear_ram0
   472  07FE                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475  07FE                     __end_of__initialization:	
   476  07FE  0183               	clrf	3
   477  07FF  2D85               	ljmp	_main	;jump to C main() function
   478                           
   479                           	psect	bssCOMMON
   480  0040                     __pbssCOMMON:	
   481  0040                     _display_buffer:	
   482  0040                     	ds	30
   483  005E                     _buffer_length:	
   484  005E                     	ds	1
   485                           
   486                           	psect	clrtext
   487  07EF                     clear_ram0:	
   488                           ;	Called with FSR containing the base address, and
   489                           ;	W with the last address+1
   490                           
   491  07EF  0064               	clrwdt	;clear the watchdog before getting into this loop
   492  07F0                     clrloop0:	
   493  07F0  0180               	clrf	0	;clear RAM location pointed to by FSR
   494  07F1  0A84               	incf	4,f	;increment pointer
   495  07F2  0604               	xorwf	4,w	;XOR with final address
   496  07F3  1903               	btfsc	3,2	;have we reached the end yet?
   497  07F4  3400               	retlw	0	;all done for this memory range, return
   498  07F5  0604               	xorwf	4,w	;XOR again to restore value
   499  07F6  2FF0               	goto	clrloop0	;do the next byte
   500                           
   501                           	psect	cstackCOMMON
   502  005F                     __pcstackCOMMON:	
   503  005F                     ?_setUpBuffer:	
   504  005F                     ?_run:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  005F                     ??_run:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  005F                     ??_spread:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  005F                     ??_ascii2font:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  005F                     ?_spread:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  005F                     ?_ascii2font:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  005F                     ascii2font@ascii:	
   523                           ; 1 bytes @ 0x0
   524                           
   525                           
   526                           ; 1 bytes @ 0x0
   527  005F                     	ds	1
   528  0060                     ?___wmul:	
   529  0060                     ___wmul@multiplier:	
   530                           ; 2 bytes @ 0x1
   531                           
   532                           
   533                           ; 2 bytes @ 0x1
   534  0060                     	ds	1
   535  0061                     run@i:	
   536                           
   537                           ; 2 bytes @ 0x2
   538  0061                     	ds	1
   539  0062                     ___wmul@multiplicand:	
   540                           
   541                           ; 2 bytes @ 0x3
   542  0062                     	ds	1
   543  0063                     spread@b:	
   544                           
   545                           ; 1 bytes @ 0x4
   546  0063                     	ds	1
   547  0064                     ??___wmul:	
   548  0064                     ___wmul@product:	
   549                           ; 0 bytes @ 0x5
   550                           
   551                           
   552                           ; 2 bytes @ 0x5
   553  0064                     	ds	2
   554  0066                     ??_setUpBuffer:	
   555                           
   556                           ; 0 bytes @ 0x7
   557  0066                     	ds	7
   558  006D                     setUpBuffer@currentChar:	
   559                           
   560                           ; 2 bytes @ 0xE
   561  006D                     	ds	2
   562  006F                     setUpBuffer@j:	
   563                           
   564                           ; 2 bytes @ 0x10
   565  006F                     	ds	2
   566  0071                     ?_main:	
   567  0071                     main@argc:	
   568                           ; 2 bytes @ 0x12
   569                           
   570                           
   571                           ; 2 bytes @ 0x12
   572  0071                     	ds	2
   573  0073                     main@argv:	
   574                           
   575                           ; 2 bytes @ 0x14
   576  0073                     	ds	2
   577  0075                     ??_main:	
   578                           
   579                           ; 0 bytes @ 0x16
   580  0075                     	ds	3
   581  0078                     main@last_sensor:	
   582                           
   583                           ; 1 bytes @ 0x19
   584  0078                     	ds	1
   585  0079                     main@sensor:	
   586                           
   587                           ; 1 bytes @ 0x1A
   588  0079                     	ds	1
   589                           
   590                           	psect	maintext
   591  0585                     __pmaintext:	
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 40 in file "magicwandmain.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  argc            2   18[COMMON] int 
   600 ;;  argv            2   20[COMMON] PTR PTR unsigned char 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  sensor          1   26[COMMON] unsigned char 
   603 ;;  last_sensor     1   25[COMMON] unsigned char 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  2   18[COMMON] int 
   606 ;; Registers used:
   607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 17F/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1
   613 ;;      Params:         4       0       0
   614 ;;      Locals:         2       0       0
   615 ;;      Temps:          3       0       0
   616 ;;      Totals:         9       0       0
   617 ;;Total ram usage:        9 bytes
   618 ;; Hardware stack levels required when called:    2
   619 ;; This function calls:
   620 ;;		_run
   621 ;;		_setUpBuffer
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _main
   629  0585                     _main:	
   630                           
   631                           ;magicwandmain.c: 41: uint8_t sensor, last_sensor;
   632                           ;magicwandmain.c: 42: ADCON1 =0x06;
   633                           
   634                           ;incstack = 0
   635                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   636  0585  3006               	movlw	6
   637  0586  1683               	bsf	3,5	;RP0=1, select bank1
   638  0587  1303               	bcf	3,6	;RP1=0, select bank1
   639  0588  009F               	movwf	31	;volatile
   640                           
   641                           ;magicwandmain.c: 43: TRISA = 0xFF;
   642  0589  30FF               	movlw	255
   643  058A  0085               	movwf	5	;volatile
   644                           
   645                           ;magicwandmain.c: 45: TRISC = 0x00;
   646  058B  0187               	clrf	7	;volatile
   647                           
   648                           ;magicwandmain.c: 46: setUpBuffer();
   649  058C  277A               	fcall	_setUpBuffer
   650                           
   651                           ;magicwandmain.c: 47: sensor = RA0 & 1;
   652  058D  3000               	movlw	0
   653  058E  1283               	bcf	3,5	;RP0=0, select bank0
   654  058F  1303               	bcf	3,6	;RP1=0, select bank0
   655  0590  1805               	btfsc	5,0	;volatile
   656  0591  3001               	movlw	1
   657  0592  3901               	andlw	1
   658  0593  00F5               	movwf	??_main
   659  0594  0875               	movf	??_main,w
   660  0595  00F9               	movwf	main@sensor
   661  0596                     L1:	
   662                           
   663                           ;magicwandmain.c: 48: last_sensor = sensor;
   664  0596  0879               	movf	main@sensor,w
   665  0597  00F5               	movwf	??_main
   666  0598  0875               	movf	??_main,w
   667  0599  00F8               	movwf	main@last_sensor
   668                           
   669                           ;magicwandmain.c: 50: {
   670                           ;magicwandmain.c: 51: sensor = RA1 & 1;
   671                           
   672                           ;magicwandmain.c: 49: while(1)
   673  059A  3000               	movlw	0
   674  059B  1283               	bcf	3,5	;RP0=0, select bank0
   675  059C  1303               	bcf	3,6	;RP1=0, select bank0
   676  059D  1885               	btfsc	5,1	;volatile
   677  059E  3001               	movlw	1
   678  059F  3901               	andlw	1
   679  05A0  00F5               	movwf	??_main
   680  05A1  0875               	movf	??_main,w
   681  05A2  00F9               	movwf	main@sensor
   682                           
   683                           ;magicwandmain.c: 52: if( (sensor != last_sensor) && sensor == 0 ){
   684  05A3  0879               	movf	main@sensor,w
   685  05A4  0678               	xorwf	main@last_sensor,w
   686  05A5  1903               	skipnz
   687  05A6  2D96               	goto	L1
   688  05A7  08F9               	movf	main@sensor,f
   689  05A8  1D03               	skipz
   690  05A9  2D96               	goto	L1
   691                           
   692                           ;magicwandmain.c: 53: _delay((unsigned long)((160)*(8000000/4000.0)));
   693  05AA  3002               	movlw	2
   694  05AB  00F7               	movwf	??_main+2
   695  05AC  30A0               	movlw	160
   696  05AD  00F6               	movwf	??_main+1
   697  05AE  3092               	movlw	146
   698  05AF  00F5               	movwf	??_main
   699  05B0                     u167:	
   700  05B0  0BF5               	decfsz	??_main,f
   701  05B1  2DB0               	goto	u167
   702  05B2  0BF6               	decfsz	??_main+1,f
   703  05B3  2DB0               	goto	u167
   704  05B4  0BF7               	decfsz	??_main+2,f
   705  05B5  2DB0               	goto	u167
   706  05B6  0000               	nop
   707                           
   708                           ;magicwandmain.c: 54: run();
   709  05B7  255F               	fcall	_run
   710  05B8  2D96               	goto	L1
   711  05B9                     __end_of_main:	
   712                           ;magicwandmain.c: 57: }
   713                           ;magicwandmain.c: 58: return (0);
   714                           ;	Return value of _main is never used
   715                           
   716                           ;magicwandmain.c: 55: }
   717                           ;magicwandmain.c: 56: last_sensor = sensor;
   718                           
   719                           
   720                           	psect	text1
   721  077A                     __ptext1:	
   722 ;; *************** function _setUpBuffer *****************
   723 ;; Defined at:
   724 ;;		line 64 in file "magicwandmain.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  j               2   16[COMMON] int 
   729 ;;  currentChar     2   14[COMMON] int 
   730 ;; Return value:  Size  Location     Type
   731 ;;		None               void
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1
   739 ;;      Params:         0       0       0
   740 ;;      Locals:         4       0       0
   741 ;;      Temps:          7       0       0
   742 ;;      Totals:        11       0       0
   743 ;;Total ram usage:       11 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    1
   746 ;; This function calls:
   747 ;;		___wmul
   748 ;;		_ascii2font
   749 ;;		_spread
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _setUpBuffer
   757  077A                     _setUpBuffer:	
   758                           
   759                           ;magicwandmain.c: 65: int j, currentChar=0;
   760                           
   761                           ;incstack = 0
   762                           ; Regs used in _setUpBuffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   763  077A  01ED               	clrf	setUpBuffer@currentChar
   764  077B  01EE               	clrf	setUpBuffer@currentChar+1
   765                           
   766                           ;magicwandmain.c: 66: display_length = sizeof(message);
   767  077C  3006               	movlw	6
   768  077D  00E6               	movwf	??_setUpBuffer
   769  077E  0866               	movf	??_setUpBuffer,w
   770  077F  00FA               	movwf	_display_length
   771                           
   772                           ;magicwandmain.c: 67: for(currentChar=0; currentChar<display_length; currentChar++) {
   773  0780  01ED               	clrf	setUpBuffer@currentChar
   774  0781  01EE               	clrf	setUpBuffer@currentChar+1
   775  0782                     l42:	
   776  0782  086E               	movf	setUpBuffer@currentChar+1,w
   777  0783  3A80               	xorlw	128
   778  0784  00E6               	movwf	??_setUpBuffer
   779  0785  3080               	movlw	128
   780  0786  0266               	subwf	??_setUpBuffer,w
   781  0787  1D03               	skipz
   782  0788  2F8B               	goto	u125
   783  0789  087A               	movf	_display_length,w
   784  078A  026D               	subwf	setUpBuffer@currentChar,w
   785  078B                     u125:	
   786  078B  1803               	btfsc	3,0
   787  078C  2FEA               	goto	l476
   788                           
   789                           ;magicwandmain.c: 69: for(j=0; j<6; j++) {
   790  078D  01EF               	clrf	setUpBuffer@j
   791  078E  01F0               	clrf	setUpBuffer@j+1
   792  078F  0870               	movf	setUpBuffer@j+1,w
   793  0790  3A80               	xorlw	128
   794  0791  00FF               	movwf	127
   795  0792  3080               	movlw	128
   796  0793  027F               	subwf	127,w
   797  0794  1D03               	skipz
   798  0795  2F98               	goto	u105
   799  0796  3006               	movlw	6
   800  0797  026F               	subwf	setUpBuffer@j,w
   801  0798                     u105:	
   802  0798  1803               	btfsc	3,0
   803  0799  2FE3               	goto	l474
   804  079A                     l466:	
   805                           
   806                           ;magicwandmain.c: 70: display_buffer[buffer_length] = spread(matrixFont[ascii2font(messa
      +                          ge[currentChar])][j]);
   807  079A  086D               	movf	setUpBuffer@currentChar,w
   808  079B  3E74               	addlw	low (_message| (0+32768))
   809  079C  0084               	movwf	4
   810  079D  3087               	movlw	high (_message| (0+32768))
   811  079E  1803               	skipnc
   812  079F  3E01               	addlw	1
   813  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   814  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   815  07A2  00FF               	movwf	127
   816  07A3  2600               	fcall	stringtab
   817  07A4  2537               	fcall	_ascii2font
   818  07A5  00E6               	movwf	??_setUpBuffer
   819  07A6  01E7               	clrf	??_setUpBuffer+1
   820  07A7  0866               	movf	??_setUpBuffer,w
   821  07A8  00E0               	movwf	___wmul@multiplier
   822  07A9  0867               	movf	??_setUpBuffer+1,w
   823  07AA  00E1               	movwf	___wmul@multiplier+1
   824  07AB  3006               	movlw	6
   825  07AC  00E2               	movwf	___wmul@multiplicand
   826  07AD  3000               	movlw	0
   827  07AE  00E3               	movwf	___wmul@multiplicand+1
   828  07AF  253C               	fcall	___wmul
   829  07B0  3012               	movlw	low (_matrixFont| (0+32768))
   830  07B1  00E8               	movwf	??_setUpBuffer+2
   831  07B2  3086               	movlw	high (_matrixFont| (0+32768))
   832  07B3  00E9               	movwf	??_setUpBuffer+3
   833  07B4  0860               	movf	?___wmul,w
   834  07B5  0768               	addwf	??_setUpBuffer+2,w
   835  07B6  00EA               	movwf	??_setUpBuffer+4
   836  07B7  0861               	movf	?___wmul+1,w
   837  07B8  1803               	skipnc
   838  07B9  0A61               	incf	?___wmul+1,w
   839  07BA  0769               	addwf	??_setUpBuffer+3,w
   840  07BB  00EB               	movwf	??_setUpBuffer+5
   841  07BC  086F               	movf	setUpBuffer@j,w
   842  07BD  076A               	addwf	??_setUpBuffer+4,w
   843  07BE  0084               	movwf	4
   844  07BF  0870               	movf	setUpBuffer@j+1,w
   845  07C0  1803               	skipnc
   846  07C1  0A70               	incf	setUpBuffer@j+1,w
   847  07C2  076B               	addwf	??_setUpBuffer+5,w
   848  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   849  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   850  07C5  00FF               	movwf	127
   851  07C6  2600               	fcall	stringtab
   852  07C7  25B9               	fcall	_spread
   853  07C8  00EC               	movwf	??_setUpBuffer+6
   854  07C9  085E               	movf	_buffer_length,w
   855  07CA  3E40               	addlw	_display_buffer& (0+255)
   856  07CB  0084               	movwf	4
   857  07CC  086C               	movf	??_setUpBuffer+6,w
   858  07CD  0080               	movwf	0
   859                           
   860                           ;magicwandmain.c: 71: buffer_length++;
   861  07CE  3001               	movlw	1
   862  07CF  00E6               	movwf	??_setUpBuffer
   863  07D0  0866               	movf	??_setUpBuffer,w
   864  07D1  07DE               	addwf	_buffer_length,f
   865  07D2  3001               	movlw	1
   866  07D3  07EF               	addwf	setUpBuffer@j,f
   867  07D4  1803               	skipnc
   868  07D5  0AF0               	incf	setUpBuffer@j+1,f
   869  07D6  3000               	movlw	0
   870  07D7  07F0               	addwf	setUpBuffer@j+1,f
   871  07D8  0870               	movf	setUpBuffer@j+1,w
   872  07D9  3A80               	xorlw	128
   873  07DA  00FF               	movwf	127
   874  07DB  3080               	movlw	128
   875  07DC  027F               	subwf	127,w
   876  07DD  1D03               	skipz
   877  07DE  2FE1               	goto	u115
   878  07DF  3006               	movlw	6
   879  07E0  026F               	subwf	setUpBuffer@j,w
   880  07E1                     u115:	
   881  07E1  1C03               	skipc
   882  07E2  2F9A               	goto	l466
   883  07E3                     l474:	
   884  07E3  3001               	movlw	1
   885  07E4  07ED               	addwf	setUpBuffer@currentChar,f
   886  07E5  1803               	skipnc
   887  07E6  0AEE               	incf	setUpBuffer@currentChar+1,f
   888  07E7  3000               	movlw	0
   889  07E8  07EE               	addwf	setUpBuffer@currentChar+1,f
   890  07E9  2F82               	goto	l42
   891  07EA                     l476:	
   892                           
   893                           ;magicwandmain.c: 72: }
   894                           ;magicwandmain.c: 73: }
   895                           ;magicwandmain.c: 74: display_buffer[buffer_length] = 0;
   896  07EA  085E               	movf	_buffer_length,w
   897  07EB  3E40               	addlw	_display_buffer& (0+255)
   898  07EC  0084               	movwf	4
   899  07ED  0180               	clrf	0
   900  07EE  0008               	return
   901  07EF                     __end_of_setUpBuffer:	
   902                           
   903                           	psect	text2
   904  05B9                     __ptext2:	
   905 ;; *************** function _spread *****************
   906 ;; Defined at:
   907 ;;		line 81 in file "magicwandmain.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  b               1    wreg     unsigned char 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  b               1    4[COMMON] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      unsigned char 
   914 ;; Registers used:
   915 ;;		wreg, status,2, status,0
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1
   921 ;;      Params:         0       0       0
   922 ;;      Locals:         1       0       0
   923 ;;      Temps:          4       0       0
   924 ;;      Totals:         5       0       0
   925 ;;Total ram usage:        5 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_setUpBuffer
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _spread
   936  05B9                     _spread:	
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _spread: [wreg+status,2+status,0]
   940                           ;spread@b stored from wreg
   941  05B9  00E3               	movwf	spread@b
   942                           
   943                           ;magicwandmain.c: 82: b = ((b & 0x55) << 1) | ((b >> 1) & 0x55);
   944  05BA  0863               	movf	spread@b,w
   945  05BB  00DF               	movwf	??_spread
   946  05BC  3001               	movlw	1
   947  05BD                     u15:	
   948  05BD  1003               	clrc
   949  05BE  0CDF               	rrf	??_spread,f
   950  05BF  3EFF               	addlw	-1
   951  05C0  1D03               	skipz
   952  05C1  2DBD               	goto	u15
   953  05C2  3055               	movlw	85
   954  05C3  055F               	andwf	??_spread,w
   955  05C4  00E0               	movwf	??_spread+1
   956  05C5  0863               	movf	spread@b,w
   957  05C6  3955               	andlw	85
   958  05C7  00E1               	movwf	??_spread+2
   959  05C8  0761               	addwf	??_spread+2,w
   960  05C9  0460               	iorwf	??_spread+1,w
   961  05CA  00E2               	movwf	??_spread+3
   962  05CB  0862               	movf	??_spread+3,w
   963  05CC  00E3               	movwf	spread@b
   964                           
   965                           ;magicwandmain.c: 83: b = ((b & 0x33) << 2) | ((b >> 2) & 0x33);
   966  05CD  0863               	movf	spread@b,w
   967  05CE  00DF               	movwf	??_spread
   968  05CF  3002               	movlw	2
   969  05D0                     u25:	
   970  05D0  1003               	clrc
   971  05D1  0CDF               	rrf	??_spread,f
   972  05D2  3EFF               	addlw	-1
   973  05D3  1D03               	skipz
   974  05D4  2DD0               	goto	u25
   975  05D5  3033               	movlw	51
   976  05D6  055F               	andwf	??_spread,w
   977  05D7  00E0               	movwf	??_spread+1
   978  05D8  0863               	movf	spread@b,w
   979  05D9  3933               	andlw	51
   980  05DA  00E1               	movwf	??_spread+2
   981  05DB  3001               	movlw	1
   982  05DC                     u35:	
   983  05DC  1003               	clrc
   984  05DD  0DE1               	rlf	??_spread+2,f
   985  05DE  3EFF               	addlw	-1
   986  05DF  1D03               	skipz
   987  05E0  2DDC               	goto	u35
   988  05E1  1003               	clrc
   989  05E2  0D61               	rlf	??_spread+2,w
   990  05E3  0460               	iorwf	??_spread+1,w
   991  05E4  00E2               	movwf	??_spread+3
   992  05E5  0862               	movf	??_spread+3,w
   993  05E6  00E3               	movwf	spread@b
   994                           
   995                           ;magicwandmain.c: 84: b = ((b & 0x0F) << 4) | (b >> 4);
   996  05E7  0863               	movf	spread@b,w
   997  05E8  00DF               	movwf	??_spread
   998  05E9  3004               	movlw	4
   999  05EA                     u45:	
  1000  05EA  1003               	clrc
  1001  05EB  0CDF               	rrf	??_spread,f
  1002  05EC  3EFF               	addlw	-1
  1003  05ED  1D03               	skipz
  1004  05EE  2DEA               	goto	u45
  1005  05EF  0863               	movf	spread@b,w
  1006  05F0  390F               	andlw	15
  1007  05F1  00E0               	movwf	??_spread+1
  1008  05F2  3003               	movlw	3
  1009  05F3                     u55:	
  1010  05F3  1003               	clrc
  1011  05F4  0DE0               	rlf	??_spread+1,f
  1012  05F5  3EFF               	addlw	-1
  1013  05F6  1D03               	skipz
  1014  05F7  2DF3               	goto	u55
  1015  05F8  1003               	clrc
  1016  05F9  0D60               	rlf	??_spread+1,w
  1017  05FA  045F               	iorwf	??_spread,w
  1018  05FB  00E1               	movwf	??_spread+2
  1019  05FC  0861               	movf	??_spread+2,w
  1020  05FD  00E3               	movwf	spread@b
  1021                           
  1022                           ;magicwandmain.c: 86: return b;
  1023  05FE  0863               	movf	spread@b,w
  1024  05FF  0008               	return
  1025  0600                     __end_of_spread:	
  1026                           
  1027                           	psect	text3
  1028  0537                     __ptext3:	
  1029 ;; *************** function _ascii2font *****************
  1030 ;; Defined at:
  1031 ;;		line 77 in file "magicwandmain.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  ascii           1    wreg     unsigned char 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  ascii           1    0[COMMON] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      unsigned char 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1
  1045 ;;      Params:         0       0       0
  1046 ;;      Locals:         1       0       0
  1047 ;;      Temps:          0       0       0
  1048 ;;      Totals:         1       0       0
  1049 ;;Total ram usage:        1 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_setUpBuffer
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           
  1059                           ;psect for function _ascii2font
  1060  0537                     _ascii2font:	
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _ascii2font: [wreg+status,2+status,0]
  1064                           ;ascii2font@ascii stored from wreg
  1065  0537  00DF               	movwf	ascii2font@ascii
  1066                           
  1067                           ;magicwandmain.c: 78: ascii -= 0x20;
  1068  0538  3020               	movlw	32
  1069  0539  02DF               	subwf	ascii2font@ascii,f
  1070                           
  1071                           ;magicwandmain.c: 79: return ascii;
  1072  053A  085F               	movf	ascii2font@ascii,w
  1073  053B  0008               	return
  1074  053C                     __end_of_ascii2font:	
  1075                           
  1076                           	psect	text4
  1077  053C                     __ptext4:	
  1078 ;; *************** function ___wmul *****************
  1079 ;; Defined at:
  1080 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  multiplier      2    1[COMMON] unsigned int 
  1083 ;;  multiplicand    2    3[COMMON] unsigned int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  product         2    5[COMMON] unsigned int 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    1[COMMON] unsigned int 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1
  1095 ;;      Params:         4       0       0
  1096 ;;      Locals:         2       0       0
  1097 ;;      Temps:          0       0       0
  1098 ;;      Totals:         6       0       0
  1099 ;;Total ram usage:        6 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_setUpBuffer
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function ___wmul
  1110  053C                     ___wmul:	
  1111                           
  1112                           ;incstack = 0
  1113                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1114  053C  01E4               	clrf	___wmul@product
  1115  053D  01E5               	clrf	___wmul@product+1
  1116  053E                     l444:	
  1117  053E  1C60               	btfss	___wmul@multiplier,0
  1118  053F  2D46               	goto	l63
  1119  0540  0862               	movf	___wmul@multiplicand,w
  1120  0541  07E4               	addwf	___wmul@product,f
  1121  0542  1803               	skipnc
  1122  0543  0AE5               	incf	___wmul@product+1,f
  1123  0544  0863               	movf	___wmul@multiplicand+1,w
  1124  0545  07E5               	addwf	___wmul@product+1,f
  1125  0546                     l63:	
  1126  0546  3001               	movlw	1
  1127  0547                     u75:	
  1128  0547  1003               	clrc
  1129  0548  0DE2               	rlf	___wmul@multiplicand,f
  1130  0549  0DE3               	rlf	___wmul@multiplicand+1,f
  1131  054A  3EFF               	addlw	-1
  1132  054B  1D03               	skipz
  1133  054C  2D47               	goto	u75
  1134  054D  3001               	movlw	1
  1135  054E                     u85:	
  1136  054E  1003               	clrc
  1137  054F  0CE1               	rrf	___wmul@multiplier+1,f
  1138  0550  0CE0               	rrf	___wmul@multiplier,f
  1139  0551  3EFF               	addlw	-1
  1140  0552  1D03               	skipz
  1141  0553  2D4E               	goto	u85
  1142  0554  0861               	movf	___wmul@multiplier+1,w
  1143  0555  0460               	iorwf	___wmul@multiplier,w
  1144  0556  1D03               	skipz
  1145  0557  2D3E               	goto	l444
  1146  0558  0865               	movf	___wmul@product+1,w
  1147  0559  01E1               	clrf	?___wmul+1
  1148  055A  07E1               	addwf	?___wmul+1,f
  1149  055B  0864               	movf	___wmul@product,w
  1150  055C  01E0               	clrf	?___wmul
  1151  055D  07E0               	addwf	?___wmul,f
  1152  055E  0008               	return
  1153  055F                     __end_of___wmul:	
  1154                           
  1155                           	psect	text5
  1156  055F                     __ptext5:	
  1157 ;; *************** function _run *****************
  1158 ;; Defined at:
  1159 ;;		line 89 in file "magicwandmain.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  i               2    2[COMMON] int 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;		None               void
  1166 ;; Registers used:
  1167 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1
  1173 ;;      Params:         0       0       0
  1174 ;;      Locals:         2       0       0
  1175 ;;      Temps:          2       0       0
  1176 ;;      Totals:         4       0       0
  1177 ;;Total ram usage:        4 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _run
  1188  055F                     _run:	
  1189                           
  1190                           ;magicwandmain.c: 90: int i;
  1191                           ;magicwandmain.c: 91: for(i=0; i<buffer_length; i++){
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _run: [wreg-fsr0h+status,2+status,0]
  1195  055F  01E1               	clrf	run@i
  1196  0560  01E2               	clrf	run@i+1
  1197  0561                     l488:	
  1198  0561  0862               	movf	run@i+1,w
  1199  0562  3A80               	xorlw	128
  1200  0563  00DF               	movwf	??_run
  1201  0564  3080               	movlw	128
  1202  0565  025F               	subwf	??_run,w
  1203  0566  1D03               	skipz
  1204  0567  2D6A               	goto	u135
  1205  0568  085E               	movf	_buffer_length,w
  1206  0569  0261               	subwf	run@i,w
  1207  056A                     u135:	
  1208  056A  1803               	btfsc	3,0
  1209  056B  0008               	return
  1210                           
  1211                           ;magicwandmain.c: 92: PORTB = display_buffer[i];
  1212  056C  0861               	movf	run@i,w
  1213  056D  3E40               	addlw	_display_buffer& (0+255)
  1214  056E  0084               	movwf	4
  1215  056F  0800               	movf	0,w
  1216  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0572  0086               	movwf	6	;volatile
  1219                           
  1220                           ;magicwandmain.c: 93: _delay((unsigned long)((900)*(8000000/4000000.0)));
  1221  0573  3003               	movlw	3
  1222  0574  00E0               	movwf	??_run+1
  1223  0575  3055               	movlw	85
  1224  0576  00DF               	movwf	??_run
  1225  0577                     u177:	
  1226  0577  0BDF               	decfsz	??_run,f
  1227  0578  2D77               	goto	u177
  1228  0579  0BE0               	decfsz	??_run+1,f
  1229  057A  2D77               	goto	u177
  1230                           
  1231                           ;magicwandmain.c: 94: PORTB = 0x0;
  1232  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1233  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1234  057D  0186               	clrf	6	;volatile
  1235  057E  3001               	movlw	1
  1236  057F  07E1               	addwf	run@i,f
  1237  0580  1803               	skipnc
  1238  0581  0AE2               	incf	run@i+1,f
  1239  0582  3000               	movlw	0
  1240  0583  07E2               	addwf	run@i+1,f
  1241  0584  2D61               	goto	l488
  1242  0585                     __end_of_run:	
  1243  007E                     btemp	set	126	;btemp
  1244  007E                     wtemp	set	126
  1245  007E                     wtemp0	set	126
  1246  0080                     wtemp1	set	128
  1247  0082                     wtemp2	set	130
  1248  0084                     wtemp3	set	132
  1249  0086                     wtemp4	set	134
  1250  0088                     wtemp5	set	136
  1251  007F                     wtemp6	set	127
  1252  007E                     ttemp	set	126
  1253  007E                     ttemp0	set	126
  1254  0081                     ttemp1	set	129
  1255  0084                     ttemp2	set	132
  1256  0087                     ttemp3	set	135
  1257  007F                     ttemp4	set	127
  1258  007E                     ltemp	set	126
  1259  007E                     ltemp0	set	126
  1260  0082                     ltemp1	set	130
  1261  0086                     ltemp2	set	134
  1262  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    360
    Data        0
    BSS         31
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           62     27      59
    BANK0            32      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setUpBuffer
    _setUpBuffer->___wmul
    ___wmul->_ascii2font

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4     428
                                             18 COMMON     9     5      4
                                _run
                        _setUpBuffer
 ---------------------------------------------------------------------------------
 (1) _setUpBuffer                                         11    11      0     323
                                              7 COMMON    11    11      0
                             ___wmul
                         _ascii2font
                             _spread
 ---------------------------------------------------------------------------------
 (2) _spread                                               5     5      0     105
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _ascii2font                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     128
                                              1 COMMON     6     2      4
                         _ascii2font (ARG)
 ---------------------------------------------------------------------------------
 (1) _run                                                  4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _run
   _setUpBuffer
     ___wmul
       _ascii2font (ARG)
     _ascii2font
     _spread

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON           3E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON              3E     1B      3B       1       95.2%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               20      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3B       4        0.0%
BITBANK0            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0      3B       8        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun May 17 23:53:57 2015

                      pc 0002              __CFG_CP$OFF 0000                       l42 0782  
                     l63 0546                       u15 05BD                       u25 05D0  
                     u35 05DC                       u45 05EA                       u55 05F3  
                     u75 0547                       u85 054E                       fsr 0004  
    ___wmul@multiplicand 0062                      l444 053E                      l474 07E3  
                    l466 079A                      l476 07EA                      l488 0561  
                    _RA0 0028                      _RA1 0029                      u105 0798  
                    u115 07E1                      u125 078B                      u135 056A  
                    u167 05B0                      u177 0577                      fsr0 0004  
                    _run 055F                      indf 0000             __CFG_FOSC$HS 0000  
                   ?_run 005F                     _main 0585                     btemp 007E  
                   ltemp 007E                     run@i 0061                     start 0000  
                   ttemp 007E                     wtemp 007E                    ??_run 005F  
                  ?_main 0071            __CFG_WDTE$OFF 0000                    _PORTB 0006  
                  _TRISA 0085                    _TRISC 0087          __end_of_message 077A  
         __CFG_BOREN$OFF 0000                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FA             __end_of_main 05B9  
                 ??_main 0075             ?_setUpBuffer 005F                   _ADCON1 009F  
         __CFG_PWRTE$OFF 0000                   ___wmul 053C                   _spread 05B9  
__end_of__initialization 07FE           __pcstackCOMMON 005F               __pnvCOMMON 007A  
             _ascii2font 0537               __pmaintext 0585                  ?___wmul 0060  
                ?_spread 005F     __size_of_setUpBuffer 0075               __stringtab 0600  
        ascii2font@ascii 005F          __size_of___wmul 0023               _matrixFont 0612  
                __ptext1 077A                  __ptext2 05B9                  __ptext3 0537  
                __ptext4 053C                  __ptext5 055F          __size_of_spread 0047  
           __size_of_run 0026                  _message 0774                  clrloop0 07F0  
   end_of_initialization 07FE              ?_ascii2font 005F                  spread@b 0063  
           __pstringtext 0600               main@sensor 0079           __end_of___wmul 055F  
         __end_of_spread 0600      start_initialization 07FA   setUpBuffer@currentChar 006D  
            __end_of_run 0585      __size_of_ascii2font 0005                 ??___wmul 0064  
               ??_spread 005F              __pbssCOMMON 0040                ___latbits 0000  
          ??_setUpBuffer 0066           ___wmul@product 0064                clear_ram0 07EF  
           ??_ascii2font 005F             setUpBuffer@j 006F          main@last_sensor 0078  
            __stringbase 0612        ___wmul@multiplier 0060       __end_of_ascii2font 053C  
    __end_of_setUpBuffer 07EF       __end_of__stringtab 0612            __size_of_main 0034  
     __end_of_matrixFont 0774                 main@argc 0071                 main@argv 0073  
            _setUpBuffer 077A                stringcode 060A            _buffer_length 005E  
         _display_buffer 0040           _display_length 007A                 stringtab 0600  
