Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"1389 C:\Program Files (x86)\Microchip\xc8\v1.32\include\pic16f72.h
[v _ADCON1 `Vuc ~T0 @X0 0 e@159 ]
"961
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1071
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"35 magicwandmain.c
[v _setUpBuffer `(v ~T0 @X0 0 ef ]
"1565 C:\Program Files (x86)\Microchip\xc8\v1.32\include\pic16f72.h
[v _RA0 `Vb ~T0 @X0 0 e@40 ]
"1567
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
[v F859 `(v ~T0 @X0 1 tf1`ul ]
"154 C:\Program Files (x86)\Microchip\xc8\v1.32\include\pic.h
[v __delay `JF859 ~T0 @X0 0 e ]
[p i __delay ]
"34 magicwandmain.c
[v _run `(v ~T0 @X0 0 ef ]
"33
[v _spread `(uc ~T0 @X0 0 ef1`uc ]
"32
[v _ascii2font `(uc ~T0 @X0 0 ef1`uc ]
"207 C:\Program Files (x86)\Microchip\xc8\v1.32\include\pic16f72.h
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
[; ;stdio.h: 8: typedef int ptrdiff_t;
[; ;stdio.h: 9: typedef unsigned size_t;
[; ;stdio.h: 10: typedef unsigned short wchar_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 23: extern int errno;
[; ;stdio.h: 54: struct __prbuf
[; ;stdio.h: 55: {
[; ;stdio.h: 56: char * ptr;
[; ;stdio.h: 57: void (* func)(char);
[; ;stdio.h: 58: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 99: extern int cprintf(char *, ...);
[; ;stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 194: extern char * gets(char *);
[; ;stdio.h: 195: extern int puts(const char *);
[; ;stdio.h: 196: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 197: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 198: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 201: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 206: extern int printf(const char *, ...);
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: int rem;
[; ;stdlib.h: 29: int quot;
[; ;stdlib.h: 30: } div_t;
[; ;stdlib.h: 31: typedef struct {
[; ;stdlib.h: 32: unsigned rem;
[; ;stdlib.h: 33: unsigned quot;
[; ;stdlib.h: 34: } udiv_t;
[; ;stdlib.h: 35: typedef struct {
[; ;stdlib.h: 36: long quot;
[; ;stdlib.h: 37: long rem;
[; ;stdlib.h: 38: } ldiv_t;
[; ;stdlib.h: 39: typedef struct {
[; ;stdlib.h: 40: unsigned long quot;
[; ;stdlib.h: 41: unsigned long rem;
[; ;stdlib.h: 42: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 70: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 72: extern int rand(void);
[; ;stdlib.h: 73: extern void srand(unsigned int);
[; ;stdlib.h: 74: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 75: extern div_t div(int numer, int denom);
[; ;stdlib.h: 76: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 77: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 78: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 79: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 80: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 81: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 82: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 87: extern void * malloc(size_t);
[; ;stdlib.h: 88: extern void free(void *);
[; ;stdlib.h: 89: extern void * realloc(void *, size_t);
[; ;stdlib.h: 91: extern void abort(void);
[; ;stdlib.h: 92: extern void exit(int);
[; ;stdlib.h: 93: extern int atexit(void (*)(void));
[; ;stdlib.h: 94: extern char * getenv(const char *);
[; ;stdlib.h: 95: extern char ** environ;
[; ;stdlib.h: 96: extern int system(char *);
[; ;stdlib.h: 97: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 98: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 99: extern int abs(int);
[; ;stdlib.h: 100: extern long labs(long);
[; ;stdlib.h: 103: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 104: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 109: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 110: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 112: extern char * ftoa(float f, int * status);
[; ;htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;pic16f72.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 C:\Program Files (x86)\Microchip\xc8\v1.32\include\pic16f72.h
[; ;pic16f72.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f72.h: 53: extern volatile unsigned char TMR0 @ 0x001;
"55
[; ;pic16f72.h: 55: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f72.h: 59: extern volatile unsigned char PCL @ 0x002;
"61
[; ;pic16f72.h: 61: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f72.h: 65: extern volatile unsigned char STATUS @ 0x003;
"67
[; ;pic16f72.h: 67: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f72.h: 70: typedef union {
[; ;pic16f72.h: 71: struct {
[; ;pic16f72.h: 72: unsigned C :1;
[; ;pic16f72.h: 73: unsigned DC :1;
[; ;pic16f72.h: 74: unsigned Z :1;
[; ;pic16f72.h: 75: unsigned nPD :1;
[; ;pic16f72.h: 76: unsigned nTO :1;
[; ;pic16f72.h: 77: unsigned RP :2;
[; ;pic16f72.h: 78: unsigned IRP :1;
[; ;pic16f72.h: 79: };
[; ;pic16f72.h: 80: struct {
[; ;pic16f72.h: 81: unsigned :5;
[; ;pic16f72.h: 82: unsigned RP0 :1;
[; ;pic16f72.h: 83: unsigned RP1 :1;
[; ;pic16f72.h: 84: };
[; ;pic16f72.h: 85: struct {
[; ;pic16f72.h: 86: unsigned CARRY :1;
[; ;pic16f72.h: 87: };
[; ;pic16f72.h: 88: struct {
[; ;pic16f72.h: 89: unsigned :2;
[; ;pic16f72.h: 90: unsigned ZERO :1;
[; ;pic16f72.h: 91: };
[; ;pic16f72.h: 92: } STATUSbits_t;
[; ;pic16f72.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f72.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f72.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f72.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f72.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f72.h: 163: typedef union {
[; ;pic16f72.h: 164: struct {
[; ;pic16f72.h: 165: unsigned RA0 :1;
[; ;pic16f72.h: 166: unsigned RA1 :1;
[; ;pic16f72.h: 167: unsigned RA2 :1;
[; ;pic16f72.h: 168: unsigned RA3 :1;
[; ;pic16f72.h: 169: unsigned RA4 :1;
[; ;pic16f72.h: 170: unsigned RA5 :1;
[; ;pic16f72.h: 171: };
[; ;pic16f72.h: 172: } PORTAbits_t;
[; ;pic16f72.h: 173: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f72.h: 207: extern volatile unsigned char PORTB @ 0x006;
"209
[; ;pic16f72.h: 209: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f72.h: 212: typedef union {
[; ;pic16f72.h: 213: struct {
[; ;pic16f72.h: 214: unsigned RB0 :1;
[; ;pic16f72.h: 215: unsigned RB1 :1;
[; ;pic16f72.h: 216: unsigned RB2 :1;
[; ;pic16f72.h: 217: unsigned RB3 :1;
[; ;pic16f72.h: 218: unsigned RB4 :1;
[; ;pic16f72.h: 219: unsigned RB5 :1;
[; ;pic16f72.h: 220: unsigned RB6 :1;
[; ;pic16f72.h: 221: unsigned RB7 :1;
[; ;pic16f72.h: 222: };
[; ;pic16f72.h: 223: } PORTBbits_t;
[; ;pic16f72.h: 224: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f72.h: 268: extern volatile unsigned char PORTC @ 0x007;
"270
[; ;pic16f72.h: 270: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f72.h: 273: typedef union {
[; ;pic16f72.h: 274: struct {
[; ;pic16f72.h: 275: unsigned RC0 :1;
[; ;pic16f72.h: 276: unsigned RC1 :1;
[; ;pic16f72.h: 277: unsigned RC2 :1;
[; ;pic16f72.h: 278: unsigned RC3 :1;
[; ;pic16f72.h: 279: unsigned RC4 :1;
[; ;pic16f72.h: 280: unsigned RC5 :1;
[; ;pic16f72.h: 281: unsigned RC6 :1;
[; ;pic16f72.h: 282: unsigned RC7 :1;
[; ;pic16f72.h: 283: };
[; ;pic16f72.h: 284: } PORTCbits_t;
[; ;pic16f72.h: 285: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f72.h: 329: extern volatile unsigned char PCLATH @ 0x00A;
"331
[; ;pic16f72.h: 331: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f72.h: 334: typedef union {
[; ;pic16f72.h: 335: struct {
[; ;pic16f72.h: 336: unsigned PCLATH :5;
[; ;pic16f72.h: 337: };
[; ;pic16f72.h: 338: } PCLATHbits_t;
[; ;pic16f72.h: 339: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f72.h: 348: extern volatile unsigned char INTCON @ 0x00B;
"350
[; ;pic16f72.h: 350: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f72.h: 353: typedef union {
[; ;pic16f72.h: 354: struct {
[; ;pic16f72.h: 355: unsigned RBIF :1;
[; ;pic16f72.h: 356: unsigned INTF :1;
[; ;pic16f72.h: 357: unsigned TMR0IF :1;
[; ;pic16f72.h: 358: unsigned RBIE :1;
[; ;pic16f72.h: 359: unsigned INTE :1;
[; ;pic16f72.h: 360: unsigned TMR0IE :1;
[; ;pic16f72.h: 361: unsigned PEIE :1;
[; ;pic16f72.h: 362: unsigned GIE :1;
[; ;pic16f72.h: 363: };
[; ;pic16f72.h: 364: struct {
[; ;pic16f72.h: 365: unsigned :2;
[; ;pic16f72.h: 366: unsigned T0IF :1;
[; ;pic16f72.h: 367: unsigned :2;
[; ;pic16f72.h: 368: unsigned T0IE :1;
[; ;pic16f72.h: 369: };
[; ;pic16f72.h: 370: } INTCONbits_t;
[; ;pic16f72.h: 371: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f72.h: 425: extern volatile unsigned char PIR1 @ 0x00C;
"427
[; ;pic16f72.h: 427: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f72.h: 430: typedef union {
[; ;pic16f72.h: 431: struct {
[; ;pic16f72.h: 432: unsigned TMR1IF :1;
[; ;pic16f72.h: 433: unsigned TMR2IF :1;
[; ;pic16f72.h: 434: unsigned CCP1IF :1;
[; ;pic16f72.h: 435: unsigned SSPIF :1;
[; ;pic16f72.h: 436: unsigned :2;
[; ;pic16f72.h: 437: unsigned ADIF :1;
[; ;pic16f72.h: 438: };
[; ;pic16f72.h: 439: } PIR1bits_t;
[; ;pic16f72.h: 440: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f72.h: 469: extern volatile unsigned short TMR1 @ 0x00E;
"471
[; ;pic16f72.h: 471: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f72.h: 475: extern volatile unsigned char TMR1L @ 0x00E;
"477
[; ;pic16f72.h: 477: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f72.h: 481: extern volatile unsigned char TMR1H @ 0x00F;
"483
[; ;pic16f72.h: 483: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f72.h: 487: extern volatile unsigned char T1CON @ 0x010;
"489
[; ;pic16f72.h: 489: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f72.h: 492: typedef union {
[; ;pic16f72.h: 493: struct {
[; ;pic16f72.h: 494: unsigned TMR1ON :1;
[; ;pic16f72.h: 495: unsigned TMR1CS :1;
[; ;pic16f72.h: 496: unsigned nT1SYNC :1;
[; ;pic16f72.h: 497: unsigned T1OSCEN :1;
[; ;pic16f72.h: 498: unsigned T1CKPS :2;
[; ;pic16f72.h: 499: };
[; ;pic16f72.h: 500: struct {
[; ;pic16f72.h: 501: unsigned :2;
[; ;pic16f72.h: 502: unsigned T1INSYNC :1;
[; ;pic16f72.h: 503: unsigned :1;
[; ;pic16f72.h: 504: unsigned T1CKPS0 :1;
[; ;pic16f72.h: 505: unsigned T1CKPS1 :1;
[; ;pic16f72.h: 506: };
[; ;pic16f72.h: 507: } T1CONbits_t;
[; ;pic16f72.h: 508: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f72.h: 552: extern volatile unsigned char TMR2 @ 0x011;
"554
[; ;pic16f72.h: 554: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f72.h: 558: extern volatile unsigned char T2CON @ 0x012;
"560
[; ;pic16f72.h: 560: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f72.h: 563: typedef union {
[; ;pic16f72.h: 564: struct {
[; ;pic16f72.h: 565: unsigned T2CKPS :2;
[; ;pic16f72.h: 566: unsigned TMR2ON :1;
[; ;pic16f72.h: 567: unsigned TOUTPS :4;
[; ;pic16f72.h: 568: };
[; ;pic16f72.h: 569: struct {
[; ;pic16f72.h: 570: unsigned T2CKPS0 :1;
[; ;pic16f72.h: 571: unsigned T2CKPS1 :1;
[; ;pic16f72.h: 572: unsigned :1;
[; ;pic16f72.h: 573: unsigned TOUTPS0 :1;
[; ;pic16f72.h: 574: unsigned TOUTPS1 :1;
[; ;pic16f72.h: 575: unsigned TOUTPS2 :1;
[; ;pic16f72.h: 576: unsigned TOUTPS3 :1;
[; ;pic16f72.h: 577: };
[; ;pic16f72.h: 578: } T2CONbits_t;
[; ;pic16f72.h: 579: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f72.h: 628: extern volatile unsigned char SSPBUF @ 0x013;
"630
[; ;pic16f72.h: 630: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f72.h: 634: extern volatile unsigned char SSPCON @ 0x014;
"636
[; ;pic16f72.h: 636: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f72.h: 639: typedef union {
[; ;pic16f72.h: 640: struct {
[; ;pic16f72.h: 641: unsigned SSPM :4;
[; ;pic16f72.h: 642: unsigned CKP :1;
[; ;pic16f72.h: 643: unsigned SSPEN :1;
[; ;pic16f72.h: 644: unsigned SSPOV :1;
[; ;pic16f72.h: 645: unsigned WCOL :1;
[; ;pic16f72.h: 646: };
[; ;pic16f72.h: 647: struct {
[; ;pic16f72.h: 648: unsigned SSPM0 :1;
[; ;pic16f72.h: 649: unsigned SSPM1 :1;
[; ;pic16f72.h: 650: unsigned SSPM2 :1;
[; ;pic16f72.h: 651: unsigned SSPM3 :1;
[; ;pic16f72.h: 652: };
[; ;pic16f72.h: 653: } SSPCONbits_t;
[; ;pic16f72.h: 654: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f72.h: 703: extern volatile unsigned short CCPR1 @ 0x015;
"705
[; ;pic16f72.h: 705: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f72.h: 709: extern volatile unsigned char CCPR1L @ 0x015;
"711
[; ;pic16f72.h: 711: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f72.h: 715: extern volatile unsigned char CCPR1H @ 0x016;
"717
[; ;pic16f72.h: 717: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f72.h: 721: extern volatile unsigned char CCP1CON @ 0x017;
"723
[; ;pic16f72.h: 723: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f72.h: 726: typedef union {
[; ;pic16f72.h: 727: struct {
[; ;pic16f72.h: 728: unsigned CCP1M :4;
[; ;pic16f72.h: 729: unsigned CCP1Y :1;
[; ;pic16f72.h: 730: unsigned CCP1X :1;
[; ;pic16f72.h: 731: };
[; ;pic16f72.h: 732: struct {
[; ;pic16f72.h: 733: unsigned CCP1M0 :1;
[; ;pic16f72.h: 734: unsigned CCP1M1 :1;
[; ;pic16f72.h: 735: unsigned CCP1M2 :1;
[; ;pic16f72.h: 736: unsigned CCP1M3 :1;
[; ;pic16f72.h: 737: };
[; ;pic16f72.h: 738: } CCP1CONbits_t;
[; ;pic16f72.h: 739: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f72.h: 778: extern volatile unsigned char ADRES @ 0x01E;
"780
[; ;pic16f72.h: 780: asm("ADRES equ 01Eh");
[; <" ADRES equ 01Eh ;# ">
[; ;pic16f72.h: 783: typedef union {
[; ;pic16f72.h: 784: struct {
[; ;pic16f72.h: 785: unsigned ADRES :8;
[; ;pic16f72.h: 786: };
[; ;pic16f72.h: 787: } ADRESbits_t;
[; ;pic16f72.h: 788: extern volatile ADRESbits_t ADRESbits @ 0x01E;
[; ;pic16f72.h: 797: extern volatile unsigned char ADCON0 @ 0x01F;
"799
[; ;pic16f72.h: 799: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f72.h: 802: typedef union {
[; ;pic16f72.h: 803: struct {
[; ;pic16f72.h: 804: unsigned ADON :1;
[; ;pic16f72.h: 805: unsigned :1;
[; ;pic16f72.h: 806: unsigned GO_nDONE :1;
[; ;pic16f72.h: 807: unsigned CHS :3;
[; ;pic16f72.h: 808: unsigned ADCS :2;
[; ;pic16f72.h: 809: };
[; ;pic16f72.h: 810: struct {
[; ;pic16f72.h: 811: unsigned :2;
[; ;pic16f72.h: 812: unsigned GO :1;
[; ;pic16f72.h: 813: unsigned CHS0 :1;
[; ;pic16f72.h: 814: unsigned CHS1 :1;
[; ;pic16f72.h: 815: unsigned CHS2 :1;
[; ;pic16f72.h: 816: unsigned ADCS0 :1;
[; ;pic16f72.h: 817: unsigned ADCS1 :1;
[; ;pic16f72.h: 818: };
[; ;pic16f72.h: 819: struct {
[; ;pic16f72.h: 820: unsigned :2;
[; ;pic16f72.h: 821: unsigned nDONE :1;
[; ;pic16f72.h: 822: };
[; ;pic16f72.h: 823: struct {
[; ;pic16f72.h: 824: unsigned :2;
[; ;pic16f72.h: 825: unsigned GO_DONE :1;
[; ;pic16f72.h: 826: };
[; ;pic16f72.h: 827: } ADCON0bits_t;
[; ;pic16f72.h: 828: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f72.h: 892: extern volatile unsigned char OPTION_REG @ 0x081;
"894
[; ;pic16f72.h: 894: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f72.h: 897: typedef union {
[; ;pic16f72.h: 898: struct {
[; ;pic16f72.h: 899: unsigned PS :3;
[; ;pic16f72.h: 900: unsigned PSA :1;
[; ;pic16f72.h: 901: unsigned T0SE :1;
[; ;pic16f72.h: 902: unsigned T0CS :1;
[; ;pic16f72.h: 903: unsigned INTEDG :1;
[; ;pic16f72.h: 904: unsigned nRBPU :1;
[; ;pic16f72.h: 905: };
[; ;pic16f72.h: 906: struct {
[; ;pic16f72.h: 907: unsigned PS0 :1;
[; ;pic16f72.h: 908: unsigned PS1 :1;
[; ;pic16f72.h: 909: unsigned PS2 :1;
[; ;pic16f72.h: 910: };
[; ;pic16f72.h: 911: } OPTION_REGbits_t;
[; ;pic16f72.h: 912: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f72.h: 961: extern volatile unsigned char TRISA @ 0x085;
"963
[; ;pic16f72.h: 963: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f72.h: 966: typedef union {
[; ;pic16f72.h: 967: struct {
[; ;pic16f72.h: 968: unsigned TRISA0 :1;
[; ;pic16f72.h: 969: unsigned TRISA1 :1;
[; ;pic16f72.h: 970: unsigned TRISA2 :1;
[; ;pic16f72.h: 971: unsigned TRISA3 :1;
[; ;pic16f72.h: 972: unsigned TRISA4 :1;
[; ;pic16f72.h: 973: unsigned TRISA5 :1;
[; ;pic16f72.h: 974: };
[; ;pic16f72.h: 975: } TRISAbits_t;
[; ;pic16f72.h: 976: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f72.h: 1010: extern volatile unsigned char TRISB @ 0x086;
"1012
[; ;pic16f72.h: 1012: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f72.h: 1015: typedef union {
[; ;pic16f72.h: 1016: struct {
[; ;pic16f72.h: 1017: unsigned TRISB0 :1;
[; ;pic16f72.h: 1018: unsigned TRISB1 :1;
[; ;pic16f72.h: 1019: unsigned TRISB2 :1;
[; ;pic16f72.h: 1020: unsigned TRISB3 :1;
[; ;pic16f72.h: 1021: unsigned TRISB4 :1;
[; ;pic16f72.h: 1022: unsigned TRISB5 :1;
[; ;pic16f72.h: 1023: unsigned TRISB6 :1;
[; ;pic16f72.h: 1024: unsigned TRISB7 :1;
[; ;pic16f72.h: 1025: };
[; ;pic16f72.h: 1026: } TRISBbits_t;
[; ;pic16f72.h: 1027: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f72.h: 1071: extern volatile unsigned char TRISC @ 0x087;
"1073
[; ;pic16f72.h: 1073: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f72.h: 1076: typedef union {
[; ;pic16f72.h: 1077: struct {
[; ;pic16f72.h: 1078: unsigned TRISC0 :1;
[; ;pic16f72.h: 1079: unsigned TRISC1 :1;
[; ;pic16f72.h: 1080: unsigned TRISC2 :1;
[; ;pic16f72.h: 1081: unsigned TRISC3 :1;
[; ;pic16f72.h: 1082: unsigned TRISC4 :1;
[; ;pic16f72.h: 1083: unsigned TRISC5 :1;
[; ;pic16f72.h: 1084: unsigned TRISC6 :1;
[; ;pic16f72.h: 1085: unsigned TRISC7 :1;
[; ;pic16f72.h: 1086: };
[; ;pic16f72.h: 1087: } TRISCbits_t;
[; ;pic16f72.h: 1088: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f72.h: 1132: extern volatile unsigned char PIE1 @ 0x08C;
"1134
[; ;pic16f72.h: 1134: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f72.h: 1137: typedef union {
[; ;pic16f72.h: 1138: struct {
[; ;pic16f72.h: 1139: unsigned TMR1IE :1;
[; ;pic16f72.h: 1140: unsigned TMR2IE :1;
[; ;pic16f72.h: 1141: unsigned CCP1IE :1;
[; ;pic16f72.h: 1142: unsigned SSPIE :1;
[; ;pic16f72.h: 1143: unsigned :2;
[; ;pic16f72.h: 1144: unsigned ADIE :1;
[; ;pic16f72.h: 1145: };
[; ;pic16f72.h: 1146: } PIE1bits_t;
[; ;pic16f72.h: 1147: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f72.h: 1176: extern volatile unsigned char PCON @ 0x08E;
"1178
[; ;pic16f72.h: 1178: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f72.h: 1181: typedef union {
[; ;pic16f72.h: 1182: struct {
[; ;pic16f72.h: 1183: unsigned nBOR :1;
[; ;pic16f72.h: 1184: unsigned nPOR :1;
[; ;pic16f72.h: 1185: };
[; ;pic16f72.h: 1186: struct {
[; ;pic16f72.h: 1187: unsigned nBO :1;
[; ;pic16f72.h: 1188: };
[; ;pic16f72.h: 1189: } PCONbits_t;
[; ;pic16f72.h: 1190: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f72.h: 1209: extern volatile unsigned char PR2 @ 0x092;
"1211
[; ;pic16f72.h: 1211: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f72.h: 1215: extern volatile unsigned char SSPADD @ 0x093;
"1217
[; ;pic16f72.h: 1217: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f72.h: 1221: extern volatile unsigned char SSPSTAT @ 0x094;
"1223
[; ;pic16f72.h: 1223: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f72.h: 1226: typedef union {
[; ;pic16f72.h: 1227: struct {
[; ;pic16f72.h: 1228: unsigned BF :1;
[; ;pic16f72.h: 1229: unsigned UA :1;
[; ;pic16f72.h: 1230: unsigned R_nW :1;
[; ;pic16f72.h: 1231: unsigned S :1;
[; ;pic16f72.h: 1232: unsigned P :1;
[; ;pic16f72.h: 1233: unsigned D_nA :1;
[; ;pic16f72.h: 1234: unsigned CKE :1;
[; ;pic16f72.h: 1235: unsigned SMP :1;
[; ;pic16f72.h: 1236: };
[; ;pic16f72.h: 1237: struct {
[; ;pic16f72.h: 1238: unsigned :2;
[; ;pic16f72.h: 1239: unsigned R :1;
[; ;pic16f72.h: 1240: unsigned :2;
[; ;pic16f72.h: 1241: unsigned D :1;
[; ;pic16f72.h: 1242: };
[; ;pic16f72.h: 1243: struct {
[; ;pic16f72.h: 1244: unsigned :2;
[; ;pic16f72.h: 1245: unsigned I2C_READ :1;
[; ;pic16f72.h: 1246: unsigned I2C_START :1;
[; ;pic16f72.h: 1247: unsigned I2C_STOP :1;
[; ;pic16f72.h: 1248: unsigned I2C_DATA :1;
[; ;pic16f72.h: 1249: };
[; ;pic16f72.h: 1250: struct {
[; ;pic16f72.h: 1251: unsigned :2;
[; ;pic16f72.h: 1252: unsigned nW :1;
[; ;pic16f72.h: 1253: unsigned :2;
[; ;pic16f72.h: 1254: unsigned nA :1;
[; ;pic16f72.h: 1255: };
[; ;pic16f72.h: 1256: struct {
[; ;pic16f72.h: 1257: unsigned :2;
[; ;pic16f72.h: 1258: unsigned nWRITE :1;
[; ;pic16f72.h: 1259: unsigned :2;
[; ;pic16f72.h: 1260: unsigned nADDRESS :1;
[; ;pic16f72.h: 1261: };
[; ;pic16f72.h: 1262: struct {
[; ;pic16f72.h: 1263: unsigned :2;
[; ;pic16f72.h: 1264: unsigned R_W :1;
[; ;pic16f72.h: 1265: unsigned :2;
[; ;pic16f72.h: 1266: unsigned D_A :1;
[; ;pic16f72.h: 1267: };
[; ;pic16f72.h: 1268: struct {
[; ;pic16f72.h: 1269: unsigned :2;
[; ;pic16f72.h: 1270: unsigned READ_WRITE :1;
[; ;pic16f72.h: 1271: unsigned :2;
[; ;pic16f72.h: 1272: unsigned DATA_ADDRESS :1;
[; ;pic16f72.h: 1273: };
[; ;pic16f72.h: 1274: } SSPSTATbits_t;
[; ;pic16f72.h: 1275: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f72.h: 1389: extern volatile unsigned char ADCON1 @ 0x09F;
"1391
[; ;pic16f72.h: 1391: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f72.h: 1394: typedef union {
[; ;pic16f72.h: 1395: struct {
[; ;pic16f72.h: 1396: unsigned PCFG :3;
[; ;pic16f72.h: 1397: };
[; ;pic16f72.h: 1398: struct {
[; ;pic16f72.h: 1399: unsigned PCFG0 :1;
[; ;pic16f72.h: 1400: unsigned PCFG1 :1;
[; ;pic16f72.h: 1401: unsigned PCFG2 :1;
[; ;pic16f72.h: 1402: };
[; ;pic16f72.h: 1403: } ADCON1bits_t;
[; ;pic16f72.h: 1404: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f72.h: 1428: extern volatile unsigned char PMDATL @ 0x10C;
"1430
[; ;pic16f72.h: 1430: asm("PMDATL equ 010Ch");
[; <" PMDATL equ 010Ch ;# ">
[; ;pic16f72.h: 1434: extern volatile unsigned char PMADRL @ 0x10D;
"1436
[; ;pic16f72.h: 1436: asm("PMADRL equ 010Dh");
[; <" PMADRL equ 010Dh ;# ">
[; ;pic16f72.h: 1440: extern volatile unsigned char PMDATH @ 0x10E;
"1442
[; ;pic16f72.h: 1442: asm("PMDATH equ 010Eh");
[; <" PMDATH equ 010Eh ;# ">
[; ;pic16f72.h: 1446: extern volatile unsigned char PMADRH @ 0x10F;
"1448
[; ;pic16f72.h: 1448: asm("PMADRH equ 010Fh");
[; <" PMADRH equ 010Fh ;# ">
[; ;pic16f72.h: 1452: extern volatile unsigned char PMCON1 @ 0x18C;
"1454
[; ;pic16f72.h: 1454: asm("PMCON1 equ 018Ch");
[; <" PMCON1 equ 018Ch ;# ">
[; ;pic16f72.h: 1457: typedef union {
[; ;pic16f72.h: 1458: struct {
[; ;pic16f72.h: 1459: unsigned RD :1;
[; ;pic16f72.h: 1460: };
[; ;pic16f72.h: 1461: } PMCON1bits_t;
[; ;pic16f72.h: 1462: extern volatile PMCON1bits_t PMCON1bits @ 0x18C;
[; ;pic16f72.h: 1477: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f72.h: 1479: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f72.h: 1481: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f72.h: 1483: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f72.h: 1485: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f72.h: 1487: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f72.h: 1489: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f72.h: 1491: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f72.h: 1493: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f72.h: 1495: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f72.h: 1497: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f72.h: 1499: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f72.h: 1501: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f72.h: 1503: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f72.h: 1505: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f72.h: 1507: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f72.h: 1509: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f72.h: 1511: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f72.h: 1513: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f72.h: 1515: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f72.h: 1517: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f72.h: 1519: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f72.h: 1521: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f72.h: 1523: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f72.h: 1525: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f72.h: 1527: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f72.h: 1529: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f72.h: 1531: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f72.h: 1533: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f72.h: 1535: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f72.h: 1537: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f72.h: 1539: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f72.h: 1541: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f72.h: 1543: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f72.h: 1545: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f72.h: 1547: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f72.h: 1549: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f72.h: 1551: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f72.h: 1553: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f72.h: 1555: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f72.h: 1557: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f72.h: 1559: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f72.h: 1561: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f72.h: 1563: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f72.h: 1565: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f72.h: 1567: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f72.h: 1569: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f72.h: 1571: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f72.h: 1573: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f72.h: 1575: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f72.h: 1577: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f72.h: 1579: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f72.h: 1581: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f72.h: 1583: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f72.h: 1585: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f72.h: 1587: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f72.h: 1589: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f72.h: 1591: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f72.h: 1593: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f72.h: 1595: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f72.h: 1597: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f72.h: 1599: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f72.h: 1601: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f72.h: 1603: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f72.h: 1605: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f72.h: 1607: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f72.h: 1609: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f72.h: 1611: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f72.h: 1613: extern volatile __bit RD @ (((unsigned) &PMCON1)*8) + 0;
[; ;pic16f72.h: 1615: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f72.h: 1617: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f72.h: 1619: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f72.h: 1621: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f72.h: 1623: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f72.h: 1625: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f72.h: 1627: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f72.h: 1629: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f72.h: 1631: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f72.h: 1633: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f72.h: 1635: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f72.h: 1637: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f72.h: 1639: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f72.h: 1641: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f72.h: 1643: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f72.h: 1645: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f72.h: 1647: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f72.h: 1649: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f72.h: 1651: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f72.h: 1653: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f72.h: 1655: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f72.h: 1657: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f72.h: 1659: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f72.h: 1661: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f72.h: 1663: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f72.h: 1665: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f72.h: 1667: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f72.h: 1669: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f72.h: 1671: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f72.h: 1673: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f72.h: 1675: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f72.h: 1677: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f72.h: 1679: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f72.h: 1681: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f72.h: 1683: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f72.h: 1685: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f72.h: 1687: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f72.h: 1689: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f72.h: 1691: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f72.h: 1693: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f72.h: 1695: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f72.h: 1697: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f72.h: 1699: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f72.h: 1701: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f72.h: 1703: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f72.h: 1705: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f72.h: 1707: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f72.h: 1709: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f72.h: 1711: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f72.h: 1713: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f72.h: 1715: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f72.h: 1717: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f72.h: 1719: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f72.h: 1721: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f72.h: 1723: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f72.h: 1725: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f72.h: 1727: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f72.h: 1729: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f72.h: 1731: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f72.h: 1733: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f72.h: 1735: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f72.h: 1737: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f72.h: 1739: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f72.h: 1741: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f72.h: 1743: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f72.h: 1745: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f72.h: 1747: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f72.h: 1749: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f72.h: 1751: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f72.h: 1753: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f72.h: 1755: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f72.h: 1757: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f72.h: 1759: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f72.h: 1761: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 144: extern void flash_erase(unsigned short addr);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;string.h: 22: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 23: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 24: extern void * memset(void *, int, size_t);
[; ;string.h: 42: extern char * strcat(char *, const char *);
[; ;string.h: 43: extern char * strcpy(char *, const char *);
[; ;string.h: 44: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 45: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 46: extern char * strdup(const char *);
[; ;string.h: 47: extern char * strtok(char *, const char *);
[; ;string.h: 50: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 51: extern int strcmp(const char *, const char *);
[; ;string.h: 52: extern int stricmp(const char *, const char *);
[; ;string.h: 53: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 54: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 55: extern void * memchr(const void *, int, size_t);
[; ;string.h: 56: extern size_t strcspn(const char *, const char *);
[; ;string.h: 57: extern char * strpbrk(const char *, const char *);
[; ;string.h: 58: extern size_t strspn(const char *, const char *);
[; ;string.h: 59: extern char * strstr(const char *, const char *);
[; ;string.h: 60: extern char * stristr(const char *, const char *);
[; ;string.h: 61: extern char * strerror(int);
[; ;string.h: 62: extern size_t strlen(const char *);
[; ;string.h: 63: extern char * strchr(const char *, int);
[; ;string.h: 64: extern char * strichr(const char *, int);
[; ;string.h: 65: extern char * strrchr(const char *, int);
[; ;string.h: 66: extern char * strrichr(const char *, int);
[v F973 `Cuc ~T0 @X0 -> 6 `i t ]
"16 font.h
[v _matrixFont `F973 ~T0 @X0 -> 59 `i e ]
[i _matrixFont
:U ..
:U ..
"17
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"18
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 253 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"19
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
:U ..
"20
-> -> 0 `i `uc
-> -> 36 `i `uc
-> -> 255 `i `uc
-> -> 36 `i `uc
-> -> 255 `i `uc
-> -> 36 `i `uc
..
:U ..
"21
-> -> 0 `i `uc
-> -> 18 `i `uc
-> -> 42 `i `uc
-> -> 127 `i `uc
-> -> 42 `i `uc
-> -> 36 `i `uc
..
:U ..
"22
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
:U ..
"23
-> -> 0 `i `uc
-> -> 118 `i `uc
-> -> 137 `i `uc
-> -> 149 `i `uc
-> -> 98 `i `uc
-> -> 5 `i `uc
..
:U ..
"24
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
:U ..
"25
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 60 `i `uc
-> -> 66 `i `uc
-> -> 129 `i `uc
-> -> 0 `i `uc
..
:U ..
"26
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 129 `i `uc
-> -> 66 `i `uc
-> -> 60 `i `uc
-> -> 0 `i `uc
..
:U ..
"27
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
:U ..
"28
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 62 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
..
:U ..
"29
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
:U ..
"30
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
..
:U ..
"31
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
:U ..
"32
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
:U ..
"33
-> -> 0 `i `uc
-> -> 126 `i `uc
-> -> 137 `i `uc
-> -> 145 `i `uc
-> -> 161 `i `uc
-> -> 126 `i `uc
..
:U ..
"34
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 65 `i `uc
-> -> 255 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
..
:U ..
"35
-> -> 0 `i `uc
-> -> 67 `i `uc
-> -> 133 `i `uc
-> -> 137 `i `uc
-> -> 145 `i `uc
-> -> 97 `i `uc
..
:U ..
"36
-> -> 0 `i `uc
-> -> 66 `i `uc
-> -> 129 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 110 `i `uc
..
:U ..
"37
-> -> 0 `i `uc
-> -> 24 `i `uc
-> -> 40 `i `uc
-> -> 72 `i `uc
-> -> 255 `i `uc
-> -> 8 `i `uc
..
:U ..
"38
-> -> 0 `i `uc
-> -> 242 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 142 `i `uc
..
:U ..
"39
-> -> 0 `i `uc
-> -> 30 `i `uc
-> -> 41 `i `uc
-> -> 73 `i `uc
-> -> 137 `i `uc
-> -> 134 `i `uc
..
:U ..
"40
-> -> 0 `i `uc
-> -> 128 `i `uc
-> -> 143 `i `uc
-> -> 144 `i `uc
-> -> 160 `i `uc
-> -> 192 `i `uc
..
:U ..
"41
-> -> 0 `i `uc
-> -> 110 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 110 `i `uc
..
:U ..
"42
-> -> 0 `i `uc
-> -> 112 `i `uc
-> -> 137 `i `uc
-> -> 137 `i `uc
-> -> 138 `i `uc
-> -> 124 `i `uc
..
:U ..
"43
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 253 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"44
-> -> 0 `i `uc
-> -> 68 `i `uc
-> -> 2 `i `uc
-> -> 18 `i `uc
-> -> 2 `i `uc
-> -> 68 `i `uc
..
:U ..
"45
-> -> 0 `i `uc
-> -> 8 `i `uc
-> -> 28 `i `uc
-> -> 42 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
..
:U ..
"46
-> -> 0 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
..
:U ..
"47
-> -> 0 `i `uc
-> -> 16 `i `uc
-> -> 16 `i `uc
-> -> 84 `i `uc
-> -> 56 `i `uc
-> -> 16 `i `uc
..
:U ..
"48
-> -> 0 `i `uc
-> -> 96 `i `uc
-> -> 128 `i `uc
-> -> 141 `i `uc
-> -> 144 `i `uc
-> -> 96 `i `uc
..
:U ..
"49
-> -> 0 `i `uc
-> -> 102 `i `uc
-> -> 137 `i `uc
-> -> 143 `i `uc
-> -> 129 `i `uc
-> -> 126 `i `uc
..
:U ..
"50
-> -> 0 `i `uc
-> -> 127 `i `uc
-> -> 136 `i `uc
-> -> 136 `i `uc
-> -> 136 `i `uc
-> -> 127 `i `uc
..
:U ..
"51
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 110 `i `uc
..
:U ..
"52
-> -> 0 `i `uc
-> -> 126 `i `uc
-> -> 129 `i `uc
-> -> 129 `i `uc
-> -> 129 `i `uc
-> -> 66 `i `uc
..
:U ..
"53
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 129 `i `uc
-> -> 129 `i `uc
-> -> 66 `i `uc
-> -> 60 `i `uc
..
:U ..
"54
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 129 `i `uc
..
:U ..
"55
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 144 `i `uc
-> -> 144 `i `uc
-> -> 144 `i `uc
-> -> 128 `i `uc
..
:U ..
"56
-> -> 0 `i `uc
-> -> 126 `i `uc
-> -> 129 `i `uc
-> -> 137 `i `uc
-> -> 137 `i `uc
-> -> 78 `i `uc
..
:U ..
"57
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 16 `i `uc
-> -> 16 `i `uc
-> -> 16 `i `uc
-> -> 255 `i `uc
..
:U ..
"58
-> -> 0 `i `uc
-> -> 129 `i `uc
-> -> 129 `i `uc
-> -> 255 `i `uc
-> -> 129 `i `uc
-> -> 129 `i `uc
..
:U ..
"59
-> -> 0 `i `uc
-> -> 6 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 254 `i `uc
..
:U ..
"60
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 24 `i `uc
-> -> 36 `i `uc
-> -> 66 `i `uc
-> -> 129 `i `uc
..
:U ..
"61
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
..
:U ..
"62
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 64 `i `uc
-> -> 48 `i `uc
-> -> 64 `i `uc
-> -> 255 `i `uc
..
:U ..
"63
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 64 `i `uc
-> -> 48 `i `uc
-> -> 8 `i `uc
-> -> 255 `i `uc
..
:U ..
"64
-> -> 0 `i `uc
-> -> 126 `i `uc
-> -> 129 `i `uc
-> -> 129 `i `uc
-> -> 129 `i `uc
-> -> 126 `i `uc
..
:U ..
"65
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 136 `i `uc
-> -> 136 `i `uc
-> -> 136 `i `uc
-> -> 112 `i `uc
..
:U ..
"66
-> -> 0 `i `uc
-> -> 126 `i `uc
-> -> 129 `i `uc
-> -> 133 `i `uc
-> -> 130 `i `uc
-> -> 125 `i `uc
..
:U ..
"67
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 136 `i `uc
-> -> 140 `i `uc
-> -> 138 `i `uc
-> -> 113 `i `uc
..
:U ..
"68
-> -> 0 `i `uc
-> -> 97 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 145 `i `uc
-> -> 142 `i `uc
..
:U ..
"69
-> -> 0 `i `uc
-> -> 128 `i `uc
-> -> 128 `i `uc
-> -> 255 `i `uc
-> -> 128 `i `uc
-> -> 128 `i `uc
..
:U ..
"70
-> -> 0 `i `uc
-> -> 254 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 254 `i `uc
..
:U ..
"71
-> -> 0 `i `uc
-> -> 240 `i `uc
-> -> 12 `i `uc
-> -> 3 `i `uc
-> -> 12 `i `uc
-> -> 240 `i `uc
..
:U ..
"72
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 2 `i `uc
-> -> 12 `i `uc
-> -> 2 `i `uc
-> -> 255 `i `uc
..
:U ..
"73
-> -> 0 `i `uc
-> -> 195 `i `uc
-> -> 36 `i `uc
-> -> 24 `i `uc
-> -> 36 `i `uc
-> -> 195 `i `uc
..
:U ..
"74
-> -> 0 `i `uc
-> -> 224 `i `uc
-> -> 16 `i `uc
-> -> 15 `i `uc
-> -> 16 `i `uc
-> -> 224 `i `uc
..
:U ..
"75
-> -> 0 `i `uc
-> -> 131 `i `uc
-> -> 133 `i `uc
-> -> 153 `i `uc
-> -> 161 `i `uc
-> -> 193 `i `uc
..
..
]
[; ;font.h: 16: const uint8_t matrixFont[59][6] = {
[; ;font.h: 17: {0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
[; ;font.h: 18: {0x00, 0x00, 0x00, 0xFD, 0x00, 0x00},
[; ;font.h: 19: {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
[; ;font.h: 20: {0x00, 0x24, 0xFF, 0x24, 0xFF, 0x24},
[; ;font.h: 21: {0x00, 0x12, 0x2A, 0x7F, 0x2A, 0x24},
[; ;font.h: 22: {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
[; ;font.h: 23: {0x00, 0x76, 0x89, 0x95, 0x62, 0x05},
[; ;font.h: 24: {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
[; ;font.h: 25: {0x00, 0x00, 0x3C, 0x42, 0x81, 0x00},
[; ;font.h: 26: {0x00, 0x00, 0x81, 0x42, 0x3C, 0x00},
[; ;font.h: 27: {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
[; ;font.h: 28: {0x00, 0x08, 0x08, 0x3E, 0x08, 0x08},
[; ;font.h: 29: {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
[; ;font.h: 30: {0x00, 0x08, 0x08, 0x08, 0x08, 0x08},
[; ;font.h: 31: {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
[; ;font.h: 32: {0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
[; ;font.h: 33: {0x00, 0x7E, 0x89, 0x91, 0xA1, 0x7E},
[; ;font.h: 34: {0x00, 0x00, 0x41, 0xFF, 0x01, 0x00},
[; ;font.h: 35: {0x00, 0x43, 0x85, 0x89, 0x91, 0x61},
[; ;font.h: 36: {0x00, 0x42, 0x81, 0x91, 0x91, 0x6E},
[; ;font.h: 37: {0x00, 0x18, 0x28, 0x48, 0xFF, 0x08},
[; ;font.h: 38: {0x00, 0xF2, 0x91, 0x91, 0x91, 0x8E},
[; ;font.h: 39: {0x00, 0x1E, 0x29, 0x49, 0x89, 0x86},
[; ;font.h: 40: {0x00, 0x80, 0x8F, 0x90, 0xA0, 0xC0},
[; ;font.h: 41: {0x00, 0x6E, 0x91, 0x91, 0x91, 0x6E},
[; ;font.h: 42: {0x00, 0x70, 0x89, 0x89, 0x8A, 0x7C},
[; ;font.h: 43: {0x00, 0x00, 0x00, 0xFD, 0x00, 0x00},
[; ;font.h: 44: {0x00, 0x44, 0x02, 0x12, 0x02, 0x44},
[; ;font.h: 45: {0x00, 0x08, 0x1C, 0x2A, 0x08, 0x08},
[; ;font.h: 46: {0x00, 0x14, 0x14, 0x14, 0x14, 0x14},
[; ;font.h: 47: {0x00, 0x10, 0x10, 0x54, 0x38, 0x10},
[; ;font.h: 48: {0x00, 0x60, 0x80, 0x8D, 0x90, 0x60},
[; ;font.h: 49: {0x00, 0x66, 0x89, 0x8F, 0x81, 0x7E},
[; ;font.h: 50: {0x00, 0x7F, 0x88, 0x88, 0x88, 0x7F},
[; ;font.h: 51: {0x00, 0xFF, 0x91, 0x91, 0x91, 0x6E},
[; ;font.h: 52: {0x00, 0x7E, 0x81, 0x81, 0x81, 0x42},
[; ;font.h: 53: {0x00, 0xFF, 0x81, 0x81, 0x42, 0x3C},
[; ;font.h: 54: {0x00, 0xFF, 0x91, 0x91, 0x91, 0x81},
[; ;font.h: 55: {0x00, 0xFF, 0x90, 0x90, 0x90, 0x80},
[; ;font.h: 56: {0x00, 0x7E, 0x81, 0x89, 0x89, 0x4E},
[; ;font.h: 57: {0x00, 0xFF, 0x10, 0x10, 0x10, 0xFF},
[; ;font.h: 58: {0x00, 0x81, 0x81, 0xFF, 0x81, 0x81},
[; ;font.h: 59: {0x00, 0x06, 0x01, 0x01, 0x01, 0xFE},
[; ;font.h: 60: {0x00, 0xFF, 0x18, 0x24, 0x42, 0x81},
[; ;font.h: 61: {0x00, 0xFF, 0x01, 0x01, 0x01, 0x01},
[; ;font.h: 62: {0x00, 0xFF, 0x40, 0x30, 0x40, 0xFF},
[; ;font.h: 63: {0x00, 0xFF, 0x40, 0x30, 0x08, 0xFF},
[; ;font.h: 64: {0x00, 0x7E, 0x81, 0x81, 0x81, 0x7E},
[; ;font.h: 65: {0x00, 0xFF, 0x88, 0x88, 0x88, 0x70},
[; ;font.h: 66: {0x00, 0x7E, 0x81, 0x85, 0x82, 0x7D},
[; ;font.h: 67: {0x00, 0xFF, 0x88, 0x8C, 0x8A, 0x71},
[; ;font.h: 68: {0x00, 0x61, 0x91, 0x91, 0x91, 0x8E},
[; ;font.h: 69: {0x00, 0x80, 0x80, 0xFF, 0x80, 0x80},
[; ;font.h: 70: {0x00, 0xFE, 0x01, 0x01, 0x01, 0xFE},
[; ;font.h: 71: {0x00, 0xF0, 0x0C, 0x03, 0x0C, 0xF0},
[; ;font.h: 72: {0x00, 0xFF, 0x02, 0x0C, 0x02, 0xFF},
[; ;font.h: 73: {0x00, 0xC3, 0x24, 0x18, 0x24, 0xC3},
[; ;font.h: 74: {0x00, 0xE0, 0x10, 0x0F, 0x10, 0xE0},
[; ;font.h: 75: {0x00, 0x83, 0x85, 0x99, 0xA1, 0xC1}
[; ;font.h: 76: };
"21 magicwandmain.c
[p x FOSC=HS ]
"22
[p x WDTE=OFF ]
"23
[p x PWRTE=OFF ]
"24
[p x CP=OFF ]
"25
[p x BOREN=OFF ]
"27
[v _message `Cuc ~T0 @X0 -> 0 `x e ]
[i _message
:U ..
-> 75 `c
-> 73 `c
-> 82 `c
-> 65 `c
-> 78 `c
-> 0 `c
..
]
[; ;magicwandmain.c: 27: const uint8_t message[] = "KIRAN";
"28
[v _display_length `uc ~T0 @X0 1 e ]
[i _display_length
-> -> 0 `i `uc
]
[; ;magicwandmain.c: 28: uint8_t display_length = 0;
"30
[v _buffer_length `uc ~T0 @X0 1 e ]
[i _buffer_length
-> -> 0 `i `uc
]
[; ;magicwandmain.c: 30: uint8_t buffer_length = 0;
"31
[v _display_buffer `uc ~T0 @X0 * -> 5 `i -> 6 `i e ]
[; ;magicwandmain.c: 31: uint8_t display_buffer[5*6];
[; ;magicwandmain.c: 32: uint8_t ascii2font(uint8_t ascii);
[; ;magicwandmain.c: 33: uint8_t spread(uint8_t ascii);
[; ;magicwandmain.c: 34: void run();
[; ;magicwandmain.c: 35: void setUpBuffer();
"40
[v _main `(i ~T0 @X0 1 ef2`i`**uc ]
{
[; ;magicwandmain.c: 40: int main(int argc, char** argv) {
[e :U _main ]
[v _argc `i ~T0 @X0 1 r1 ]
[v _argv `**uc ~T0 @X0 1 r2 ]
[f ]
"41
[v _sensor `uc ~T0 @X0 1 a ]
[v _last_sensor `uc ~T0 @X0 1 a ]
[; ;magicwandmain.c: 41: uint8_t sensor, last_sensor;
[; ;magicwandmain.c: 42: ADCON1 =0x06;
"42
[e = _ADCON1 -> -> 6 `i `uc ]
[; ;magicwandmain.c: 43: TRISA = 0xFF;
"43
[e = _TRISA -> -> 255 `i `uc ]
[; ;magicwandmain.c: 45: TRISC = 0x00;
"45
[e = _TRISC -> -> 0 `i `uc ]
[; ;magicwandmain.c: 46: setUpBuffer();
"46
[e ( _setUpBuffer ..  ]
[; ;magicwandmain.c: 47: sensor = RA0 & 1;
"47
[e = _sensor -> & -> _RA0 `i -> 1 `i `uc ]
[; ;magicwandmain.c: 48: last_sensor = sensor;
"48
[e = _last_sensor _sensor ]
[; ;magicwandmain.c: 49: while(1)
"49
[e :U 72 ]
[; ;magicwandmain.c: 50: {
"50
{
[; ;magicwandmain.c: 51: sensor = RA1 & 1;
"51
[e = _sensor -> & -> _RA1 `i -> 1 `i `uc ]
[; ;magicwandmain.c: 52: if( (sensor != last_sensor) && sensor == 0 ){
"52
[e $ ! && != -> _sensor `i -> _last_sensor `i == -> _sensor `i -> 0 `i 74  ]
{
[; ;magicwandmain.c: 53: _delay((unsigned long)((160)*(8000000/4000.0)));
"53
[e ( __delay (1 -> * -> -> 160 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;magicwandmain.c: 54: run();
"54
[e ( _run ..  ]
"55
}
[e :U 74 ]
[; ;magicwandmain.c: 55: }
[; ;magicwandmain.c: 56: last_sensor = sensor;
"56
[e = _last_sensor _sensor ]
"57
}
[e :U 71 ]
"49
[e $U 72  ]
[e :U 73 ]
[; ;magicwandmain.c: 57: }
[; ;magicwandmain.c: 58: return (0);
"58
[e ) -> 0 `i ]
[e $UE 70  ]
[; ;magicwandmain.c: 59: }
"59
[e :UE 70 ]
}
"64
[v _setUpBuffer `(v ~T0 @X0 1 ef ]
{
[; ;magicwandmain.c: 64: void setUpBuffer(){
[e :U _setUpBuffer ]
[f ]
"65
[v _j `i ~T0 @X0 1 a ]
[v _currentChar `i ~T0 @X0 1 a ]
[; ;magicwandmain.c: 65: int j, currentChar=0;
[e = _currentChar -> 0 `i ]
[; ;magicwandmain.c: 66: display_length = sizeof(message);
"66
[e = _display_length -> -> # _message `ui `uc ]
[; ;magicwandmain.c: 67: for(currentChar=0; currentChar<display_length; currentChar++) {
"67
{
[e = _currentChar -> 0 `i ]
[e $U 79  ]
[e :U 76 ]
{
[; ;magicwandmain.c: 69: for(j=0; j<6; j++) {
"69
{
[e = _j -> 0 `i ]
[e $ < _j -> 6 `i 80  ]
[e $U 81  ]
[e :U 80 ]
{
[; ;magicwandmain.c: 70: display_buffer[buffer_length] = spread(matrixFont[ascii2font(message[currentChar])][j]);
"70
[e = *U + &U _display_buffer * -> _buffer_length `ux -> -> # *U &U _display_buffer `ui `ux ( _spread (1 *U + &U *U + &U _matrixFont * -> ( _ascii2font (1 *U + &U _message * -> -> _currentChar `ui `ux -> -> # *U &U _message `ui `ux `ux -> * -> # *U &U *U &U _matrixFont `ui -> -> 6 `i `ui `ux * -> -> _j `ui `ux -> -> # *U &U *U + &U _matrixFont * -> ( _ascii2font (1 *U + &U _message * -> -> _currentChar `ui `ux -> -> # *U &U _message `ui `ux `ux -> * -> # *U &U *U &U _matrixFont `ui -> -> 6 `i `ui `ux `ui `ux ]
[; ;magicwandmain.c: 71: buffer_length++;
"71
[e ++ _buffer_length -> -> 1 `i `uc ]
"72
}
"69
[e ++ _j -> 1 `i ]
[e $ < _j -> 6 `i 80  ]
[e :U 81 ]
"72
}
"73
}
"67
[e ++ _currentChar -> 1 `i ]
[e :U 79 ]
[e $ < _currentChar -> _display_length `i 76  ]
[e :U 77 ]
"73
}
[; ;magicwandmain.c: 72: }
[; ;magicwandmain.c: 73: }
[; ;magicwandmain.c: 74: display_buffer[buffer_length] = 0;
"74
[e = *U + &U _display_buffer * -> _buffer_length `ux -> -> # *U &U _display_buffer `ui `ux -> -> 0 `i `uc ]
[; ;magicwandmain.c: 75: }
"75
[e :UE 75 ]
}
"77
[v _ascii2font `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;magicwandmain.c: 77: uint8_t ascii2font(uint8_t ascii){
[e :U _ascii2font ]
[v _ascii `uc ~T0 @X0 1 r1 ]
[f ]
[; ;magicwandmain.c: 78: ascii -= 0x20;
"78
[e =- _ascii -> -> 32 `i `uc ]
[; ;magicwandmain.c: 79: return ascii;
"79
[e ) _ascii ]
[e $UE 83  ]
[; ;magicwandmain.c: 80: }
"80
[e :UE 83 ]
}
"81
[v _spread `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;magicwandmain.c: 81: uint8_t spread(uint8_t b){
[e :U _spread ]
[v _b `uc ~T0 @X0 1 r1 ]
[f ]
[; ;magicwandmain.c: 82: b = ((b & 0x55) << 1) | ((b >> 1) & 0x55);
"82
[e = _b -> | << & -> _b `i -> 85 `i -> 1 `i & >> -> _b `i -> 1 `i -> 85 `i `uc ]
[; ;magicwandmain.c: 83: b = ((b & 0x33) << 2) | ((b >> 2) & 0x33);
"83
[e = _b -> | << & -> _b `i -> 51 `i -> 2 `i & >> -> _b `i -> 2 `i -> 51 `i `uc ]
[; ;magicwandmain.c: 84: b = ((b & 0x0F) << 4) | (b >> 4);
"84
[e = _b -> | << & -> _b `i -> 15 `i -> 4 `i >> -> _b `i -> 4 `i `uc ]
[; ;magicwandmain.c: 86: return b;
"86
[e ) _b ]
[e $UE 84  ]
[; ;magicwandmain.c: 87: }
"87
[e :UE 84 ]
}
"89
[v _run `(v ~T0 @X0 1 ef ]
{
[; ;magicwandmain.c: 89: void run(){
[e :U _run ]
[f ]
"90
[v _i `i ~T0 @X0 1 a ]
[; ;magicwandmain.c: 90: int i;
[; ;magicwandmain.c: 91: for(i=0; i<buffer_length; i++){
"91
{
[e = _i -> 0 `i ]
[e $U 89  ]
[e :U 86 ]
{
[; ;magicwandmain.c: 92: PORTB = display_buffer[i];
"92
[e = _PORTB *U + &U _display_buffer * -> -> _i `ui `ux -> -> # *U &U _display_buffer `ui `ux ]
[; ;magicwandmain.c: 93: _delay((unsigned long)((900)*(8000000/4000000.0)));
"93
[e ( __delay (1 -> * -> -> 900 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;magicwandmain.c: 94: PORTB = 0x0;
"94
[e = _PORTB -> -> 0 `i `uc ]
"95
}
"91
[e ++ _i -> 1 `i ]
[e :U 89 ]
[e $ < _i -> _buffer_length `i 86  ]
[e :U 87 ]
"95
}
[; ;magicwandmain.c: 95: }
[; ;magicwandmain.c: 96: }
"96
[e :UE 85 ]
}
